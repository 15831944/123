//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_ObjFreeSpace : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_ObjFreeSpace(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_ObjFreeSpace obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_ObjFreeSpace() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_ObjFreeSpace(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public ulong zero {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_zero_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_ObjFreeSpace_zero_get(swigCPtr);
      return ret;
    } 
  }

  public ulong num_handles {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_num_handles_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_ObjFreeSpace_num_handles_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_TimeBLL TDUPDATE {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_TDUPDATE_set(swigCPtr, Dwg_Bitcode_TimeBLL.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_ObjFreeSpace_TDUPDATE_get(swigCPtr);
      Dwg_Bitcode_TimeBLL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_TimeBLL(cPtr, false);
      return ret;
    } 
  }

  public uint objects_address {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_objects_address_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_ObjFreeSpace_objects_address_get(swigCPtr);
      return ret;
    } 
  }

  public byte num_nums {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_num_nums_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_ObjFreeSpace_num_nums_get(swigCPtr);
      return ret;
    } 
  }

  public ulong max32 {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_max32_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_ObjFreeSpace_max32_get(swigCPtr);
      return ret;
    } 
  }

  public ulong max64 {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_max64_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_ObjFreeSpace_max64_get(swigCPtr);
      return ret;
    } 
  }

  public ulong maxtbl {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_maxtbl_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_ObjFreeSpace_maxtbl_get(swigCPtr);
      return ret;
    } 
  }

  public ulong maxrl {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_maxrl_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_ObjFreeSpace_maxrl_get(swigCPtr);
      return ret;
    } 
  }

  public ulong max32_hi {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_max32_hi_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_ObjFreeSpace_max32_hi_get(swigCPtr);
      return ret;
    } 
  }

  public ulong max64_hi {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_max64_hi_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_ObjFreeSpace_max64_hi_get(swigCPtr);
      return ret;
    } 
  }

  public ulong maxtbl_hi {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_maxtbl_hi_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_ObjFreeSpace_maxtbl_hi_get(swigCPtr);
      return ret;
    } 
  }

  public ulong maxrl_hi {
    set {
      LibreDWGPINVOKE.Dwg_ObjFreeSpace_maxrl_hi_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_ObjFreeSpace_maxrl_hi_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_ObjFreeSpace() : this(LibreDWGPINVOKE.new_Dwg_ObjFreeSpace(), true) {
  }

}
