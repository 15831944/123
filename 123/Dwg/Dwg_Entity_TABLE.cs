//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_Entity_TABLE : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_Entity_TABLE(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_Entity_TABLE obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_Entity_TABLE() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_Entity_TABLE(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public Dwg_Object_Entity parent {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_parent_set(swigCPtr, Dwg_Object_Entity.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_parent_get(swigCPtr);
      Dwg_Object_Entity ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Entity(cPtr, false);
      return ret;
    } 
  }

  public Dwg_LinkedData ldata {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_ldata_set(swigCPtr, Dwg_LinkedData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_ldata_get(swigCPtr);
      Dwg_LinkedData ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_LinkedData(cPtr, false);
      return ret;
    } 
  }

  public Dwg_LinkedTableData tdata {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_tdata_set(swigCPtr, Dwg_LinkedTableData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_tdata_get(swigCPtr);
      Dwg_LinkedTableData ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_LinkedTableData(cPtr, false);
      return ret;
    } 
  }

  public Dwg_FormattedTableData fdata {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_fdata_set(swigCPtr, Dwg_FormattedTableData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_fdata_get(swigCPtr);
      Dwg_FormattedTableData ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_FormattedTableData(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref table_style {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_table_style_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_table_style_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public byte unknown_rc {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_unknown_rc_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_unknown_rc_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref unknown_h {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_unknown_h_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_unknown_h_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public uint unknown_bl {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_unknown_bl_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_unknown_bl_get(swigCPtr);
      return ret;
    } 
  }

  public byte unknown_b {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_unknown_b_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_unknown_b_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown_bl1 {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_unknown_bl1_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_unknown_bl1_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD insertion_point {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_insertion_point_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_insertion_point_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD scale {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_scale_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_scale_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public byte data_flags {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_flags_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_flags_get(swigCPtr);
      return ret;
    } 
  }

  public double rotation {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_rotation_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_rotation_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD extrusion {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_extrusion_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_extrusion_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public byte has_attribs {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_has_attribs_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_has_attribs_get(swigCPtr);
      return ret;
    } 
  }

  public uint num_owned {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_num_owned_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_num_owned_get(swigCPtr);
      return ret;
    } 
  }

  public ushort flag_for_table_value {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_flag_for_table_value_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_flag_for_table_value_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD horiz_direction {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_horiz_direction_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_horiz_direction_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public uint num_cols {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_num_cols_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_num_cols_get(swigCPtr);
      return ret;
    } 
  }

  public uint num_rows {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_num_rows_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_num_rows_get(swigCPtr);
      return ret;
    } 
  }

  public uint num_cells {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_num_cells_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_num_cells_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_double col_widths {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_col_widths_set(swigCPtr, SWIGTYPE_p_double.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_col_widths_get(swigCPtr);
      SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_double row_heights {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_row_heights_set(swigCPtr, SWIGTYPE_p_double.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_row_heights_get(swigCPtr);
      SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
      return ret;
    } 
  }

  public Dwg_TABLE_Cell cells {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_cells_set(swigCPtr, Dwg_TABLE_Cell.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_cells_get(swigCPtr);
      Dwg_TABLE_Cell ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_TABLE_Cell(cPtr, false);
      return ret;
    } 
  }

  public byte has_table_overrides {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_has_table_overrides_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_has_table_overrides_get(swigCPtr);
      return ret;
    } 
  }

  public uint table_flag_override {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_table_flag_override_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_table_flag_override_get(swigCPtr);
      return ret;
    } 
  }

  public byte title_suppressed {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_suppressed_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_suppressed_get(swigCPtr);
      return ret;
    } 
  }

  public byte header_suppressed {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_suppressed_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_suppressed_get(swigCPtr);
      return ret;
    } 
  }

  public ushort flow_direction {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_flow_direction_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_flow_direction_get(swigCPtr);
      return ret;
    } 
  }

  public double horiz_cell_margin {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_horiz_cell_margin_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_horiz_cell_margin_get(swigCPtr);
      return ret;
    } 
  }

  public double vert_cell_margin {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_vert_cell_margin_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_vert_cell_margin_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color title_row_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_row_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_row_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color header_row_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_row_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_row_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color data_row_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_row_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_row_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public byte title_row_fill_none {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_row_fill_none_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_row_fill_none_get(swigCPtr);
      return ret;
    } 
  }

  public byte header_row_fill_none {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_row_fill_none_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_row_fill_none_get(swigCPtr);
      return ret;
    } 
  }

  public byte data_row_fill_none {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_row_fill_none_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_row_fill_none_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color title_row_fill_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_row_fill_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_row_fill_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color header_row_fill_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_row_fill_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_row_fill_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color data_row_fill_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_row_fill_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_row_fill_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public ushort title_row_alignment {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_row_alignment_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_row_alignment_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_row_alignment {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_row_alignment_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_row_alignment_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_row_alignment {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_row_alignment_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_row_alignment_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref title_text_style {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_text_style_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_text_style_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref header_text_style {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_text_style_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_text_style_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref data_text_style {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_text_style_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_text_style_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public double title_row_height {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_row_height_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_row_height_get(swigCPtr);
      return ret;
    } 
  }

  public double header_row_height {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_row_height_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_row_height_get(swigCPtr);
      return ret;
    } 
  }

  public double data_row_height {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_row_height_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_row_height_get(swigCPtr);
      return ret;
    } 
  }

  public byte has_border_color_overrides {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_has_border_color_overrides_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_has_border_color_overrides_get(swigCPtr);
      return ret;
    } 
  }

  public uint border_color_overrides_flag {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_border_color_overrides_flag_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_border_color_overrides_flag_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color title_horiz_top_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_top_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_top_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color title_horiz_ins_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_ins_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_ins_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color title_horiz_bottom_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_bottom_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_bottom_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color title_vert_left_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_left_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_left_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color title_vert_ins_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_ins_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_ins_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color title_vert_right_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_right_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_right_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color header_horiz_top_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_top_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_top_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color header_horiz_ins_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_ins_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_ins_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color header_horiz_bottom_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_bottom_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_bottom_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color header_vert_left_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_left_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_left_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color header_vert_ins_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_ins_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_ins_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color header_vert_right_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_right_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_right_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color data_horiz_top_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_top_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_top_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color data_horiz_ins_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_ins_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_ins_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color data_horiz_bottom_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_bottom_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_bottom_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color data_vert_left_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_left_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_left_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color data_vert_ins_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_ins_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_ins_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color data_vert_right_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_right_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_right_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public byte has_border_lineweight_overrides {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_has_border_lineweight_overrides_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_has_border_lineweight_overrides_get(swigCPtr);
      return ret;
    } 
  }

  public uint border_lineweight_overrides_flag {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_border_lineweight_overrides_flag_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_border_lineweight_overrides_flag_get(swigCPtr);
      return ret;
    } 
  }

  public ushort title_horiz_top_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_top_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_top_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort title_horiz_ins_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_ins_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_ins_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort title_horiz_bottom_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_bottom_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_bottom_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort title_vert_left_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_left_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_left_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort title_vert_ins_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_ins_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_ins_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort title_vert_right_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_right_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_right_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_horiz_top_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_top_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_top_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_horiz_ins_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_ins_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_ins_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_horiz_bottom_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_bottom_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_bottom_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_vert_left_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_left_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_left_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_vert_ins_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_ins_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_ins_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_vert_right_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_right_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_right_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_horiz_top_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_top_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_top_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_horiz_ins_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_ins_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_ins_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_horiz_bottom_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_bottom_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_bottom_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_vert_left_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_left_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_left_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_vert_ins_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_ins_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_ins_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_vert_right_linewt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_right_linewt_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_right_linewt_get(swigCPtr);
      return ret;
    } 
  }

  public byte has_border_visibility_overrides {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_has_border_visibility_overrides_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_has_border_visibility_overrides_get(swigCPtr);
      return ret;
    } 
  }

  public uint border_visibility_overrides_flag {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_border_visibility_overrides_flag_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_border_visibility_overrides_flag_get(swigCPtr);
      return ret;
    } 
  }

  public ushort title_horiz_top_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_top_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_top_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort title_horiz_ins_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_ins_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_ins_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort title_horiz_bottom_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_bottom_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_horiz_bottom_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort title_vert_left_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_left_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_left_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort title_vert_ins_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_ins_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_ins_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort title_vert_right_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_right_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_vert_right_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_horiz_top_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_top_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_top_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_horiz_ins_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_ins_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_ins_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_horiz_bottom_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_bottom_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_horiz_bottom_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_vert_left_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_left_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_left_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_vert_ins_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_ins_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_ins_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort header_vert_right_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_right_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_vert_right_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_horiz_top_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_top_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_top_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_horiz_ins_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_ins_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_ins_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_horiz_bottom_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_bottom_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_horiz_bottom_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_vert_left_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_left_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_left_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_vert_ins_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_ins_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_ins_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_vert_right_visibility {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_right_visibility_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_vert_right_visibility_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref block_header {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_block_header_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_block_header_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref first_attrib {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_first_attrib_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_first_attrib_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref last_attrib {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_last_attrib_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_last_attrib_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_p__dwg_object_ref attrib_handles {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_attrib_handles_set(swigCPtr, SWIGTYPE_p_p__dwg_object_ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_attrib_handles_get(swigCPtr);
      SWIGTYPE_p_p__dwg_object_ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref seqend {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_seqend_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_seqend_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref title_row_style_override {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_title_row_style_override_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_title_row_style_override_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref header_row_style_override {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_header_row_style_override_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_header_row_style_override_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref data_row_style_override {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_data_row_style_override_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_data_row_style_override_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public ushort unknown_bs {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_unknown_bs_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_unknown_bs_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD hor_dir {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_hor_dir_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_hor_dir_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public uint has_break_data {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_has_break_data_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_has_break_data_get(swigCPtr);
      return ret;
    } 
  }

  public uint break_flag {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_break_flag_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_break_flag_get(swigCPtr);
      return ret;
    } 
  }

  public uint break_flow_direction {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_break_flow_direction_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_break_flow_direction_get(swigCPtr);
      return ret;
    } 
  }

  public double break_spacing {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_break_spacing_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_break_spacing_get(swigCPtr);
      return ret;
    } 
  }

  public uint break_unknown1 {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_break_unknown1_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_break_unknown1_get(swigCPtr);
      return ret;
    } 
  }

  public uint break_unknown2 {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_break_unknown2_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_break_unknown2_get(swigCPtr);
      return ret;
    } 
  }

  public uint num_break_heights {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_num_break_heights_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_num_break_heights_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_TABLE_BreakHeight break_heights {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_break_heights_set(swigCPtr, Dwg_TABLE_BreakHeight.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_break_heights_get(swigCPtr);
      Dwg_TABLE_BreakHeight ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_TABLE_BreakHeight(cPtr, false);
      return ret;
    } 
  }

  public uint num_break_rows {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_num_break_rows_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_TABLE_num_break_rows_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_TABLE_BreakRow break_rows {
    set {
      LibreDWGPINVOKE.Dwg_Entity_TABLE_break_rows_set(swigCPtr, Dwg_TABLE_BreakRow.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_TABLE_break_rows_get(swigCPtr);
      Dwg_TABLE_BreakRow ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_TABLE_BreakRow(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Entity_TABLE() : this(LibreDWGPINVOKE.new_Dwg_Entity_TABLE(), true) {
  }

}
