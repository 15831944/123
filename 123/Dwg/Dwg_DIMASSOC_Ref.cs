//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_DIMASSOC_Ref : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_DIMASSOC_Ref(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_DIMASSOC_Ref obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_DIMASSOC_Ref() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_DIMASSOC_Ref(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public Dwg_Object_DIMASSOC parent {
    set {
      LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_parent_set(swigCPtr, Dwg_Object_DIMASSOC.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_parent_get(swigCPtr);
      Dwg_Object_DIMASSOC ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_DIMASSOC(cPtr, false);
      return ret;
    } 
  }

  public ushort rotated_type {
    set {
      LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_rotated_type_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_rotated_type_get(swigCPtr);
      return ret;
    } 
  }

  public byte osnap_type {
    set {
      LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_osnap_type_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_osnap_type_get(swigCPtr);
      return ret;
    } 
  }

  public string classname {
    set {
      LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_classname_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_classname_get(swigCPtr);
      return ret;
    } 
  }

  public ushort main_subent_type {
    set {
      LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_main_subent_type_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_main_subent_type_get(swigCPtr);
      return ret;
    } 
  }

  public ushort intsect_subent_type {
    set {
      LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_intsect_subent_type_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_intsect_subent_type_get(swigCPtr);
      return ret;
    } 
  }

  public uint main_gsmarker {
    set {
      LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_main_gsmarker_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_main_gsmarker_get(swigCPtr);
      return ret;
    } 
  }

  public double osnap_dist {
    set {
      LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_osnap_dist_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_osnap_dist_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD osnap_pt {
    set {
      LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_osnap_pt_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_osnap_pt_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public byte has_lastpt_ref {
    set {
      LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_has_lastpt_ref_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_has_lastpt_ref_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref mainobj {
    set {
      LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_mainobj_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_mainobj_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref intsectobj {
    set {
      LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_intsectobj_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_DIMASSOC_Ref_intsectobj_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_DIMASSOC_Ref() : this(LibreDWGPINVOKE.new_Dwg_DIMASSOC_Ref(), true) {
  }

}
