//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_Entity_VIEWPORT : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_Entity_VIEWPORT(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_Entity_VIEWPORT obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_Entity_VIEWPORT() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_Entity_VIEWPORT(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public Dwg_Object_Entity parent {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_parent_set(swigCPtr, Dwg_Object_Entity.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_parent_get(swigCPtr);
      Dwg_Object_Entity ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Entity(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD center {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_center_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_center_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public double width {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_width_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_width_get(swigCPtr);
      return ret;
    } 
  }

  public double height {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_height_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_height_get(swigCPtr);
      return ret;
    } 
  }

  public ushort on_off {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_on_off_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_on_off_get(swigCPtr);
      return ret;
    } 
  }

  public ushort id {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_id_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_id_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD view_target {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_view_target_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_view_target_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD view_direction {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_view_direction_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_view_direction_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public double view_twist {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_view_twist_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_view_twist_get(swigCPtr);
      return ret;
    } 
  }

  public double view_height {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_view_height_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_view_height_get(swigCPtr);
      return ret;
    } 
  }

  public double lens_length {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_lens_length_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_lens_length_get(swigCPtr);
      return ret;
    } 
  }

  public double front_clip_z {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_front_clip_z_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_front_clip_z_get(swigCPtr);
      return ret;
    } 
  }

  public double back_clip_z {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_back_clip_z_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_back_clip_z_get(swigCPtr);
      return ret;
    } 
  }

  public double snap_angle {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_snap_angle_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_snap_angle_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD view_center {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_view_center_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_view_center_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD snap_base {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_snap_base_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_snap_base_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD snap_spacing {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_snap_spacing_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_snap_spacing_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD grid_spacing {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_grid_spacing_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_grid_spacing_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public ushort circle_zoom {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_circle_zoom_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_circle_zoom_get(swigCPtr);
      return ret;
    } 
  }

  public ushort grid_major {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_grid_major_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_grid_major_get(swigCPtr);
      return ret;
    } 
  }

  public uint num_frozen_layers {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_num_frozen_layers_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_num_frozen_layers_get(swigCPtr);
      return ret;
    } 
  }

  public uint status_flag {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_status_flag_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_status_flag_get(swigCPtr);
      return ret;
    } 
  }

  public string style_sheet {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_style_sheet_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_style_sheet_get(swigCPtr);
      return ret;
    } 
  }

  public byte render_mode {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_render_mode_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_render_mode_get(swigCPtr);
      return ret;
    } 
  }

  public byte ucs_at_origin {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_at_origin_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_at_origin_get(swigCPtr);
      return ret;
    } 
  }

  public byte ucs_per_viewport {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_per_viewport_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_per_viewport_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD ucs_origin {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_origin_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_origin_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD ucs_x_axis {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_x_axis_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_x_axis_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD ucs_y_axis {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_y_axis_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_y_axis_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public double ucs_elevation {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_elevation_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_elevation_get(swigCPtr);
      return ret;
    } 
  }

  public ushort ucs_ortho_view_type {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_ortho_view_type_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ucs_ortho_view_type_get(swigCPtr);
      return ret;
    } 
  }

  public ushort shadeplot_mode {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_shadeplot_mode_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_shadeplot_mode_get(swigCPtr);
      return ret;
    } 
  }

  public byte use_default_lights {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_use_default_lights_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_use_default_lights_get(swigCPtr);
      return ret;
    } 
  }

  public byte default_lighting_type {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_default_lighting_type_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_default_lighting_type_get(swigCPtr);
      return ret;
    } 
  }

  public double brightness {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_brightness_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_brightness_get(swigCPtr);
      return ret;
    } 
  }

  public double contrast {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_contrast_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_contrast_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color ambient_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ambient_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_ambient_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref vport_entity_header {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_vport_entity_header_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_vport_entity_header_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_p__dwg_object_ref frozen_layers {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_frozen_layers_set(swigCPtr, SWIGTYPE_p_p__dwg_object_ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_frozen_layers_get(swigCPtr);
      SWIGTYPE_p_p__dwg_object_ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref clip_boundary {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_clip_boundary_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_clip_boundary_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref named_ucs {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_named_ucs_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_named_ucs_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref base_ucs {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_base_ucs_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_base_ucs_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref background {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_background_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_background_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref visualstyle {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_visualstyle_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_visualstyle_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref shadeplot {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_shadeplot_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_shadeplot_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref sun {
    set {
      LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_sun_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_VIEWPORT_sun_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Entity_VIEWPORT() : this(LibreDWGPINVOKE.new_Dwg_Entity_VIEWPORT(), true) {
  }

}
