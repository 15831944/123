//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_TableCell : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_TableCell(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_TableCell obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_TableCell() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_TableCell(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public uint flag {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_flag_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_TableCell_flag_get(swigCPtr);
      return ret;
    } 
  }

  public string tooltip {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_tooltip_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_TableCell_tooltip_get(swigCPtr);
      return ret;
    } 
  }

  public uint customdata {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_customdata_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_TableCell_customdata_get(swigCPtr);
      return ret;
    } 
  }

  public uint num_customdata_items {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_num_customdata_items_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_TableCell_num_customdata_items_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_TABLE_CustomDataItem customdata_items {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_customdata_items_set(swigCPtr, Dwg_TABLE_CustomDataItem.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_TableCell_customdata_items_get(swigCPtr);
      Dwg_TABLE_CustomDataItem ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_TABLE_CustomDataItem(cPtr, false);
      return ret;
    } 
  }

  public uint has_linked_data {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_has_linked_data_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_TableCell_has_linked_data_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref data_link {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_data_link_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_TableCell_data_link_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public uint num_rows {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_num_rows_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_TableCell_num_rows_get(swigCPtr);
      return ret;
    } 
  }

  public uint num_cols {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_num_cols_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_TableCell_num_cols_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_unknown_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_TableCell_unknown_get(swigCPtr);
      return ret;
    } 
  }

  public uint num_cell_contents {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_num_cell_contents_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_TableCell_num_cell_contents_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_TableCellContent cell_contents {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_cell_contents_set(swigCPtr, Dwg_TableCellContent.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_TableCell_cell_contents_get(swigCPtr);
      Dwg_TableCellContent ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_TableCellContent(cPtr, false);
      return ret;
    } 
  }

  public uint style_id {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_style_id_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_TableCell_style_id_get(swigCPtr);
      return ret;
    } 
  }

  public uint has_geom_data {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_has_geom_data_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_TableCell_has_geom_data_get(swigCPtr);
      return ret;
    } 
  }

  public uint geom_data_flag {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_geom_data_flag_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_TableCell_geom_data_flag_get(swigCPtr);
      return ret;
    } 
  }

  public double width_w_gap {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_width_w_gap_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_TableCell_width_w_gap_get(swigCPtr);
      return ret;
    } 
  }

  public double height_w_gap {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_height_w_gap_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_TableCell_height_w_gap_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref tablegeometry {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_tablegeometry_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_TableCell_tablegeometry_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public uint num_geometry {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_num_geometry_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_TableCell_num_geometry_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_CellContentGeometry geometry {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_geometry_set(swigCPtr, Dwg_CellContentGeometry.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_TableCell_geometry_get(swigCPtr);
      Dwg_CellContentGeometry ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_CellContentGeometry(cPtr, false);
      return ret;
    } 
  }

  public Dwg_CellStyle style_parent {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_style_parent_set(swigCPtr, Dwg_CellStyle.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_TableCell_style_parent_get(swigCPtr);
      Dwg_CellStyle ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_CellStyle(cPtr, false);
      return ret;
    } 
  }

  public Dwg_TableRow row_parent {
    set {
      LibreDWGPINVOKE.Dwg_TableCell_row_parent_set(swigCPtr, Dwg_TableRow.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_TableCell_row_parent_get(swigCPtr);
      Dwg_TableRow ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_TableRow(cPtr, false);
      return ret;
    } 
  }

  public Dwg_TableCell() : this(LibreDWGPINVOKE.new_Dwg_TableCell(), true) {
  }

}
