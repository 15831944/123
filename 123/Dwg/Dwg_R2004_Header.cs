//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_R2004_Header : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_R2004_Header(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_R2004_Header obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_R2004_Header() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_R2004_Header(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public SWIGTYPE_p_unsigned_char file_ID_string {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_file_ID_string_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_R2004_Header_file_ID_string_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public uint header_address {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_header_address_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_header_address_get(swigCPtr);
      return ret;
    } 
  }

  public uint header_size {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_header_size_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_header_size_get(swigCPtr);
      return ret;
    } 
  }

  public uint x04 {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_x04_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_x04_get(swigCPtr);
      return ret;
    } 
  }

  public int root_tree_node_gap {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_root_tree_node_gap_set(swigCPtr, value);
    } 
    get {
      int ret = LibreDWGPINVOKE.Dwg_R2004_Header_root_tree_node_gap_get(swigCPtr);
      return ret;
    } 
  }

  public int lowermost_left_tree_node_gap {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_lowermost_left_tree_node_gap_set(swigCPtr, value);
    } 
    get {
      int ret = LibreDWGPINVOKE.Dwg_R2004_Header_lowermost_left_tree_node_gap_get(swigCPtr);
      return ret;
    } 
  }

  public int lowermost_right_tree_node_gap {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_lowermost_right_tree_node_gap_set(swigCPtr, value);
    } 
    get {
      int ret = LibreDWGPINVOKE.Dwg_R2004_Header_lowermost_right_tree_node_gap_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown_long {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_unknown_long_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_unknown_long_get(swigCPtr);
      return ret;
    } 
  }

  public uint last_section_id {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_last_section_id_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_last_section_id_get(swigCPtr);
      return ret;
    } 
  }

  public ulong last_section_address {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_last_section_address_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_R2004_Header_last_section_address_get(swigCPtr);
      return ret;
    } 
  }

  public ulong second_header_address {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_second_header_address_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_R2004_Header_second_header_address_get(swigCPtr);
      return ret;
    } 
  }

  public uint numgaps {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_numgaps_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_numgaps_get(swigCPtr);
      return ret;
    } 
  }

  public uint numsections {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_numsections_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_numsections_get(swigCPtr);
      return ret;
    } 
  }

  public uint x20 {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_x20_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_x20_get(swigCPtr);
      return ret;
    } 
  }

  public uint x80 {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_x80_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_x80_get(swigCPtr);
      return ret;
    } 
  }

  public uint x40 {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_x40_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_x40_get(swigCPtr);
      return ret;
    } 
  }

  public uint section_map_id {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_section_map_id_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_section_map_id_get(swigCPtr);
      return ret;
    } 
  }

  public ulong section_map_address {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_section_map_address_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_R2004_Header_section_map_address_get(swigCPtr);
      return ret;
    } 
  }

  public int section_info_id {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_section_info_id_set(swigCPtr, value);
    } 
    get {
      int ret = LibreDWGPINVOKE.Dwg_R2004_Header_section_info_id_get(swigCPtr);
      return ret;
    } 
  }

  public uint section_array_size {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_section_array_size_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_section_array_size_get(swigCPtr);
      return ret;
    } 
  }

  public uint gap_array_size {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_gap_array_size_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_gap_array_size_get(swigCPtr);
      return ret;
    } 
  }

  public uint crc32 {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_crc32_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_crc32_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char padding {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_padding_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_R2004_Header_padding_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public uint section_type {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_section_type_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_section_type_get(swigCPtr);
      return ret;
    } 
  }

  public uint decomp_data_size {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_decomp_data_size_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_decomp_data_size_get(swigCPtr);
      return ret;
    } 
  }

  public uint comp_data_size {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_comp_data_size_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_comp_data_size_get(swigCPtr);
      return ret;
    } 
  }

  public uint compression_type {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_compression_type_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_compression_type_get(swigCPtr);
      return ret;
    } 
  }

  public uint checksum {
    set {
      LibreDWGPINVOKE.Dwg_R2004_Header_checksum_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_R2004_Header_checksum_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_R2004_Header() : this(LibreDWGPINVOKE.new_Dwg_R2004_Header(), true) {
  }

}
