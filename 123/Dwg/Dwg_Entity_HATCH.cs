//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_Entity_HATCH : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_Entity_HATCH(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_Entity_HATCH obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_Entity_HATCH() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_Entity_HATCH(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public Dwg_Object_Entity parent {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_parent_set(swigCPtr, Dwg_Object_Entity.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_HATCH_parent_get(swigCPtr);
      Dwg_Object_Entity ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Entity(cPtr, false);
      return ret;
    } 
  }

  public uint is_gradient_fill {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_is_gradient_fill_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_is_gradient_fill_get(swigCPtr);
      return ret;
    } 
  }

  public uint reserved {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_reserved_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_reserved_get(swigCPtr);
      return ret;
    } 
  }

  public double gradient_angle {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_gradient_angle_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_gradient_angle_get(swigCPtr);
      return ret;
    } 
  }

  public double gradient_shift {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_gradient_shift_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_gradient_shift_get(swigCPtr);
      return ret;
    } 
  }

  public uint single_color_gradient {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_single_color_gradient_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_single_color_gradient_get(swigCPtr);
      return ret;
    } 
  }

  public double gradient_tint {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_gradient_tint_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_gradient_tint_get(swigCPtr);
      return ret;
    } 
  }

  public uint num_colors {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_num_colors_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_num_colors_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_HATCH_Color colors {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_colors_set(swigCPtr, Dwg_HATCH_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_HATCH_colors_get(swigCPtr);
      Dwg_HATCH_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_HATCH_Color(cPtr, false);
      return ret;
    } 
  }

  public string gradient_name {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_gradient_name_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_gradient_name_get(swigCPtr);
      return ret;
    } 
  }

  public double elevation {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_elevation_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_elevation_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD extrusion {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_extrusion_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_HATCH_extrusion_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public string name {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_name_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_name_get(swigCPtr);
      return ret;
    } 
  }

  public byte solid_fill {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_solid_fill_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_solid_fill_get(swigCPtr);
      return ret;
    } 
  }

  public byte associative {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_associative_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_associative_get(swigCPtr);
      return ret;
    } 
  }

  public uint num_paths {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_num_paths_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_num_paths_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_HATCH_Path paths {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_paths_set(swigCPtr, Dwg_HATCH_Path.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_HATCH_paths_get(swigCPtr);
      Dwg_HATCH_Path ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_HATCH_Path(cPtr, false);
      return ret;
    } 
  }

  public ushort style {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_style_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_style_get(swigCPtr);
      return ret;
    } 
  }

  public ushort pattern_type {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_pattern_type_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_pattern_type_get(swigCPtr);
      return ret;
    } 
  }

  public double angle {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_angle_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_angle_get(swigCPtr);
      return ret;
    } 
  }

  public double scale_spacing {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_scale_spacing_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_scale_spacing_get(swigCPtr);
      return ret;
    } 
  }

  public byte double_flag {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_double_flag_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_double_flag_get(swigCPtr);
      return ret;
    } 
  }

  public ushort num_deflines {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_num_deflines_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_num_deflines_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_HATCH_DefLine deflines {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_deflines_set(swigCPtr, Dwg_HATCH_DefLine.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_HATCH_deflines_get(swigCPtr);
      Dwg_HATCH_DefLine ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_HATCH_DefLine(cPtr, false);
      return ret;
    } 
  }

  public byte has_derived {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_has_derived_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_has_derived_get(swigCPtr);
      return ret;
    } 
  }

  public double pixel_size {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_pixel_size_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_pixel_size_get(swigCPtr);
      return ret;
    } 
  }

  public uint num_seeds {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_num_seeds_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_num_seeds_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD seeds {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_seeds_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_HATCH_seeds_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public uint num_boundary_handles {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_num_boundary_handles_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_HATCH_num_boundary_handles_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_p__dwg_object_ref boundary_handles {
    set {
      LibreDWGPINVOKE.Dwg_Entity_HATCH_boundary_handles_set(swigCPtr, SWIGTYPE_p_p__dwg_object_ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_HATCH_boundary_handles_get(swigCPtr);
      SWIGTYPE_p_p__dwg_object_ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Entity_HATCH() : this(LibreDWGPINVOKE.new_Dwg_Entity_HATCH(), true) {
  }

}
