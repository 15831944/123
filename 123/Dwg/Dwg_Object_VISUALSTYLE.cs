//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_Object_VISUALSTYLE : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_Object_VISUALSTYLE(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_Object_VISUALSTYLE obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_Object_VISUALSTYLE() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_Object_VISUALSTYLE(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public Dwg_Object_Object parent {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_parent_set(swigCPtr, Dwg_Object_Object.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_parent_get(swigCPtr);
      Dwg_Object_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Object(cPtr, false);
      return ret;
    } 
  }

  public string desc {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_desc_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_desc_get(swigCPtr);
      return ret;
    } 
  }

  public ushort type {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_type_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_type_get(swigCPtr);
      return ret;
    } 
  }

  public ushort face_lighting_model {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_lighting_model_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_lighting_model_get(swigCPtr);
      return ret;
    } 
  }

  public ushort face_lighting_quality {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_lighting_quality_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_lighting_quality_get(swigCPtr);
      return ret;
    } 
  }

  public ushort face_color_mode {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_color_mode_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_color_mode_get(swigCPtr);
      return ret;
    } 
  }

  public double face_opacity {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_opacity_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_opacity_get(swigCPtr);
      return ret;
    } 
  }

  public double face_specular {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_specular_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_specular_get(swigCPtr);
      return ret;
    } 
  }

  public ushort face_modifier {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_modifier_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_modifier_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color color {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color face_mono_color {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_mono_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_face_mono_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public ushort edge_model {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_model_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_model_get(swigCPtr);
      return ret;
    } 
  }

  public uint edge_style {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_style_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_style_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color edge_intersection_color {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_intersection_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_intersection_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color edge_obscured_color {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_obscured_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_obscured_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public ushort edge_obscured_line_pattern {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_obscured_line_pattern_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_obscured_line_pattern_get(swigCPtr);
      return ret;
    } 
  }

  public ushort edge_intersection_line_pattern {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_intersection_line_pattern_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_intersection_line_pattern_get(swigCPtr);
      return ret;
    } 
  }

  public double edge_crease_angle {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_crease_angle_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_crease_angle_get(swigCPtr);
      return ret;
    } 
  }

  public ushort edge_modifier {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_modifier_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_modifier_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color edge_color {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public double edge_opacity {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_opacity_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_opacity_get(swigCPtr);
      return ret;
    } 
  }

  public ushort edge_width {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_width_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_width_get(swigCPtr);
      return ret;
    } 
  }

  public ushort edge_overhang {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_overhang_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_overhang_get(swigCPtr);
      return ret;
    } 
  }

  public ushort edge_jitter {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_jitter_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_jitter_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color edge_silhouette_color {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_silhouette_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_silhouette_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public ushort edge_silhouette_width {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_silhouette_width_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_silhouette_width_get(swigCPtr);
      return ret;
    } 
  }

  public ushort edge_halo_gap {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_halo_gap_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_halo_gap_get(swigCPtr);
      return ret;
    } 
  }

  public ushort num_edge_isolines {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_num_edge_isolines_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_num_edge_isolines_get(swigCPtr);
      return ret;
    } 
  }

  public ushort edge_hide_precision_flag {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_hide_precision_flag_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_hide_precision_flag_get(swigCPtr);
      return ret;
    } 
  }

  public ushort edge_style_apply_flag {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_style_apply_flag_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_edge_style_apply_flag_get(swigCPtr);
      return ret;
    } 
  }

  public ushort display_style {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_display_style_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_display_style_get(swigCPtr);
      return ret;
    } 
  }

  public double display_brightness {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_display_brightness_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_display_brightness_get(swigCPtr);
      return ret;
    } 
  }

  public ushort display_shadow_type {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_display_shadow_type_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_display_shadow_type_get(swigCPtr);
      return ret;
    } 
  }

  public ushort is_internal_use_only {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_is_internal_use_only_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_is_internal_use_only_get(swigCPtr);
      return ret;
    } 
  }

  public ushort unknown_float45 {
    set {
      LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_unknown_float45_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Object_VISUALSTYLE_unknown_float45_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_VISUALSTYLE() : this(LibreDWGPINVOKE.new_Dwg_Object_VISUALSTYLE(), true) {
  }

}
