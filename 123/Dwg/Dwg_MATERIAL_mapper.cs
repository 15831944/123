//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_MATERIAL_mapper : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_MATERIAL_mapper(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_MATERIAL_mapper obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_MATERIAL_mapper() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_MATERIAL_mapper(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public Dwg_Object_Object parent {
    set {
      LibreDWGPINVOKE.Dwg_MATERIAL_mapper_parent_set(swigCPtr, Dwg_Object_Object.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_MATERIAL_mapper_parent_get(swigCPtr);
      Dwg_Object_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Object(cPtr, false);
      return ret;
    } 
  }

  public double blendfactor {
    set {
      LibreDWGPINVOKE.Dwg_MATERIAL_mapper_blendfactor_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_MATERIAL_mapper_blendfactor_get(swigCPtr);
      return ret;
    } 
  }

  public byte source {
    set {
      LibreDWGPINVOKE.Dwg_MATERIAL_mapper_source_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_MATERIAL_mapper_source_get(swigCPtr);
      return ret;
    } 
  }

  public string filename {
    set {
      LibreDWGPINVOKE.Dwg_MATERIAL_mapper_filename_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_MATERIAL_mapper_filename_get(swigCPtr);
      return ret;
    } 
  }

  public byte projection {
    set {
      LibreDWGPINVOKE.Dwg_MATERIAL_mapper_projection_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_MATERIAL_mapper_projection_get(swigCPtr);
      return ret;
    } 
  }

  public byte tiling {
    set {
      LibreDWGPINVOKE.Dwg_MATERIAL_mapper_tiling_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_MATERIAL_mapper_tiling_get(swigCPtr);
      return ret;
    } 
  }

  public byte autotransform {
    set {
      LibreDWGPINVOKE.Dwg_MATERIAL_mapper_autotransform_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_MATERIAL_mapper_autotransform_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_double transmatrix {
    set {
      LibreDWGPINVOKE.Dwg_MATERIAL_mapper_transmatrix_set(swigCPtr, SWIGTYPE_p_double.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_MATERIAL_mapper_transmatrix_get(swigCPtr);
      SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
      return ret;
    } 
  }

  public ushort texturemode {
    set {
      LibreDWGPINVOKE.Dwg_MATERIAL_mapper_texturemode_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_MATERIAL_mapper_texturemode_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_MATERIAL_color color1 {
    set {
      LibreDWGPINVOKE.Dwg_MATERIAL_mapper_color1_set(swigCPtr, Dwg_MATERIAL_color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_MATERIAL_mapper_color1_get(swigCPtr);
      Dwg_MATERIAL_color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_MATERIAL_color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_MATERIAL_color color2 {
    set {
      LibreDWGPINVOKE.Dwg_MATERIAL_mapper_color2_set(swigCPtr, Dwg_MATERIAL_color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_MATERIAL_mapper_color2_get(swigCPtr);
      Dwg_MATERIAL_color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_MATERIAL_color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_MATERIAL_mapper() : this(LibreDWGPINVOKE.new_Dwg_MATERIAL_mapper(), true) {
  }

}
