//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_Entity_ATEXT : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_Entity_ATEXT(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_Entity_ATEXT obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_Entity_ATEXT() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_Entity_ATEXT(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public Dwg_Object_Entity parent {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_parent_set(swigCPtr, Dwg_Object_Entity.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_ATEXT_parent_get(swigCPtr);
      Dwg_Object_Entity ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Entity(cPtr, false);
      return ret;
    } 
  }

  public string text_size {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_text_size_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_text_size_get(swigCPtr);
      return ret;
    } 
  }

  public string xscale {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_xscale_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_xscale_get(swigCPtr);
      return ret;
    } 
  }

  public string char_spacing {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_char_spacing_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_char_spacing_get(swigCPtr);
      return ret;
    } 
  }

  public string style {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_style_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_style_get(swigCPtr);
      return ret;
    } 
  }

  public string t2 {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_t2_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_t2_get(swigCPtr);
      return ret;
    } 
  }

  public string t3 {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_t3_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_t3_get(swigCPtr);
      return ret;
    } 
  }

  public string text_value {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_text_value_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_text_value_get(swigCPtr);
      return ret;
    } 
  }

  public string offset_from_arc {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_offset_from_arc_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_offset_from_arc_get(swigCPtr);
      return ret;
    } 
  }

  public string right_offset {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_right_offset_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_right_offset_get(swigCPtr);
      return ret;
    } 
  }

  public string left_offset {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_left_offset_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_left_offset_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD center {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_center_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_ATEXT_center_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public double radius {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_radius_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_radius_get(swigCPtr);
      return ret;
    } 
  }

  public double start_angle {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_start_angle_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_start_angle_get(swigCPtr);
      return ret;
    } 
  }

  public double end_angle {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_end_angle_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_end_angle_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD extrusion {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_extrusion_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_ATEXT_extrusion_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public uint color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_color_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_color_get(swigCPtr);
      return ret;
    } 
  }

  public ushort is_reverse {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_is_reverse_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_is_reverse_get(swigCPtr);
      return ret;
    } 
  }

  public ushort text_direction {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_text_direction_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_text_direction_get(swigCPtr);
      return ret;
    } 
  }

  public ushort alignment {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_alignment_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_alignment_get(swigCPtr);
      return ret;
    } 
  }

  public ushort text_position {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_text_position_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_text_position_get(swigCPtr);
      return ret;
    } 
  }

  public ushort font_19 {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_font_19_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_font_19_get(swigCPtr);
      return ret;
    } 
  }

  public ushort bs2 {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_bs2_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_bs2_get(swigCPtr);
      return ret;
    } 
  }

  public ushort is_underlined {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_is_underlined_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_is_underlined_get(swigCPtr);
      return ret;
    } 
  }

  public ushort bs1 {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_bs1_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_bs1_get(swigCPtr);
      return ret;
    } 
  }

  public ushort font {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_font_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_font_get(swigCPtr);
      return ret;
    } 
  }

  public ushort is_shx {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_is_shx_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_is_shx_get(swigCPtr);
      return ret;
    } 
  }

  public ushort wizard_flag {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_wizard_flag_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATEXT_wizard_flag_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref arc_handle {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATEXT_arc_handle_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_ATEXT_arc_handle_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Entity_ATEXT() : this(LibreDWGPINVOKE.new_Dwg_Entity_ATEXT(), true) {
  }

}
