//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_Header_Variables : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_Header_Variables(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_Header_Variables obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_Header_Variables() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_Header_Variables(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public uint size {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_size_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_size_get(swigCPtr);
      return ret;
    } 
  }

  public uint bitsize_hi {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_bitsize_hi_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_bitsize_hi_get(swigCPtr);
      return ret;
    } 
  }

  public uint bitsize {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_bitsize_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_bitsize_get(swigCPtr);
      return ret;
    } 
  }

  public byte ACADMAINTVER {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_ACADMAINTVER_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_ACADMAINTVER_get(swigCPtr);
      return ret;
    } 
  }

  public ulong REQUIREDVERSIONS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_REQUIREDVERSIONS_set(swigCPtr, value);
    } 
    get {
      ulong ret = LibreDWGPINVOKE.Dwg_Header_Variables_REQUIREDVERSIONS_get(swigCPtr);
      return ret;
    } 
  }

  public string DWGCODEPAGE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DWGCODEPAGE_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_DWGCODEPAGE_get(swigCPtr);
      return ret;
    } 
  }

  public double unknown_0 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_0_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_0_get(swigCPtr);
      return ret;
    } 
  }

  public double unknown_1 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_1_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_1_get(swigCPtr);
      return ret;
    } 
  }

  public double unknown_2 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_2_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_2_get(swigCPtr);
      return ret;
    } 
  }

  public double unknown_3 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_3_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_3_get(swigCPtr);
      return ret;
    } 
  }

  public string unknown_text1 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_text1_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_text1_get(swigCPtr);
      return ret;
    } 
  }

  public string unknown_text2 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_text2_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_text2_get(swigCPtr);
      return ret;
    } 
  }

  public string unknown_text3 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_text3_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_text3_get(swigCPtr);
      return ret;
    } 
  }

  public string unknown_text4 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_text4_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_text4_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown_8 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_8_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_8_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown_9 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_9_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_9_get(swigCPtr);
      return ret;
    } 
  }

  public ushort unknown_10 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_10_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_10_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref VPORT_ENTITY_HEADER {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_VPORT_ENTITY_HEADER_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_VPORT_ENTITY_HEADER_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public byte DIMASO {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMASO_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMASO_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMSHO {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMSHO_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMSHO_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMSAV {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMSAV_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMSAV_get(swigCPtr);
      return ret;
    } 
  }

  public byte PLINEGEN {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PLINEGEN_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_PLINEGEN_get(swigCPtr);
      return ret;
    } 
  }

  public byte ORTHOMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_ORTHOMODE_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_ORTHOMODE_get(swigCPtr);
      return ret;
    } 
  }

  public byte REGENMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_REGENMODE_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_REGENMODE_get(swigCPtr);
      return ret;
    } 
  }

  public byte FILLMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_FILLMODE_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_FILLMODE_get(swigCPtr);
      return ret;
    } 
  }

  public byte QTEXTMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_QTEXTMODE_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_QTEXTMODE_get(swigCPtr);
      return ret;
    } 
  }

  public byte PSLTSCALE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PSLTSCALE_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_PSLTSCALE_get(swigCPtr);
      return ret;
    } 
  }

  public byte LIMCHECK {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LIMCHECK_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_LIMCHECK_get(swigCPtr);
      return ret;
    } 
  }

  public byte BLIPMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_BLIPMODE_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_BLIPMODE_get(swigCPtr);
      return ret;
    } 
  }

  public byte unknown_11 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_11_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_11_get(swigCPtr);
      return ret;
    } 
  }

  public byte USRTIMER {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_USRTIMER_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_USRTIMER_get(swigCPtr);
      return ret;
    } 
  }

  public byte SKPOLY {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SKPOLY_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_SKPOLY_get(swigCPtr);
      return ret;
    } 
  }

  public byte ANGDIR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_ANGDIR_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_ANGDIR_get(swigCPtr);
      return ret;
    } 
  }

  public byte SPLFRAME {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SPLFRAME_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_SPLFRAME_get(swigCPtr);
      return ret;
    } 
  }

  public byte ATTREQ {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_ATTREQ_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_ATTREQ_get(swigCPtr);
      return ret;
    } 
  }

  public byte ATTDIA {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_ATTDIA_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_ATTDIA_get(swigCPtr);
      return ret;
    } 
  }

  public byte MIRRTEXT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_MIRRTEXT_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_MIRRTEXT_get(swigCPtr);
      return ret;
    } 
  }

  public byte WORLDVIEW {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_WORLDVIEW_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_WORLDVIEW_get(swigCPtr);
      return ret;
    } 
  }

  public byte WIREFRAME {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_WIREFRAME_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_WIREFRAME_get(swigCPtr);
      return ret;
    } 
  }

  public byte TILEMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TILEMODE_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_TILEMODE_get(swigCPtr);
      return ret;
    } 
  }

  public byte PLIMCHECK {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PLIMCHECK_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_PLIMCHECK_get(swigCPtr);
      return ret;
    } 
  }

  public byte VISRETAIN {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_VISRETAIN_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_VISRETAIN_get(swigCPtr);
      return ret;
    } 
  }

  public byte DELOBJ {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DELOBJ_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DELOBJ_get(swigCPtr);
      return ret;
    } 
  }

  public byte DISPSILH {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DISPSILH_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DISPSILH_get(swigCPtr);
      return ret;
    } 
  }

  public byte PELLIPSE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PELLIPSE_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_PELLIPSE_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SAVEIMAGES {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SAVEIMAGES_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SAVEIMAGES_get(swigCPtr);
      return ret;
    } 
  }

  public ushort PROXYGRAPHICS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PROXYGRAPHICS_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_PROXYGRAPHICS_get(swigCPtr);
      return ret;
    } 
  }

  public ushort MEASUREMENT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_MEASUREMENT_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_MEASUREMENT_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DRAGMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DRAGMODE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DRAGMODE_get(swigCPtr);
      return ret;
    } 
  }

  public ushort TREEDEPTH {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TREEDEPTH_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_TREEDEPTH_get(swigCPtr);
      return ret;
    } 
  }

  public ushort LUNITS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LUNITS_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_LUNITS_get(swigCPtr);
      return ret;
    } 
  }

  public ushort LUPREC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LUPREC_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_LUPREC_get(swigCPtr);
      return ret;
    } 
  }

  public ushort AUNITS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_AUNITS_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_AUNITS_get(swigCPtr);
      return ret;
    } 
  }

  public ushort AUPREC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_AUPREC_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_AUPREC_get(swigCPtr);
      return ret;
    } 
  }

  public ushort OSMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_OSMODE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_OSMODE_get(swigCPtr);
      return ret;
    } 
  }

  public ushort ATTMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_ATTMODE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_ATTMODE_get(swigCPtr);
      return ret;
    } 
  }

  public ushort COORDS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_COORDS_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_COORDS_get(swigCPtr);
      return ret;
    } 
  }

  public ushort PDMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PDMODE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_PDMODE_get(swigCPtr);
      return ret;
    } 
  }

  public ushort PICKSTYLE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PICKSTYLE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_PICKSTYLE_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown_12 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_12_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_12_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown_13 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_13_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_13_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown_14 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_14_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_14_get(swigCPtr);
      return ret;
    } 
  }

  public ushort USERI1 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_USERI1_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_USERI1_get(swigCPtr);
      return ret;
    } 
  }

  public ushort USERI2 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_USERI2_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_USERI2_get(swigCPtr);
      return ret;
    } 
  }

  public ushort USERI3 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_USERI3_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_USERI3_get(swigCPtr);
      return ret;
    } 
  }

  public ushort USERI4 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_USERI4_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_USERI4_get(swigCPtr);
      return ret;
    } 
  }

  public ushort USERI5 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_USERI5_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_USERI5_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SPLINESEGS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SPLINESEGS_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SPLINESEGS_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SURFU {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SURFU_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SURFU_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SURFV {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SURFV_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SURFV_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SURFTYPE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SURFTYPE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SURFTYPE_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SURFTAB1 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SURFTAB1_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SURFTAB1_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SURFTAB2 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SURFTAB2_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SURFTAB2_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SPLINETYPE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SPLINETYPE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SPLINETYPE_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SHADEDGE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SHADEDGE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SHADEDGE_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SHADEDIF {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SHADEDIF_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SHADEDIF_get(swigCPtr);
      return ret;
    } 
  }

  public ushort UNITMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UNITMODE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_UNITMODE_get(swigCPtr);
      return ret;
    } 
  }

  public ushort MAXACTVP {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_MAXACTVP_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_MAXACTVP_get(swigCPtr);
      return ret;
    } 
  }

  public ushort ISOLINES {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_ISOLINES_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_ISOLINES_get(swigCPtr);
      return ret;
    } 
  }

  public ushort CMLJUST {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CMLJUST_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_CMLJUST_get(swigCPtr);
      return ret;
    } 
  }

  public ushort TEXTQLTY {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TEXTQLTY_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_TEXTQLTY_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown_14b {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_14b_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_14b_get(swigCPtr);
      return ret;
    } 
  }

  public double LTSCALE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LTSCALE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_LTSCALE_get(swigCPtr);
      return ret;
    } 
  }

  public double TEXTSIZE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TEXTSIZE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_TEXTSIZE_get(swigCPtr);
      return ret;
    } 
  }

  public double TRACEWID {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TRACEWID_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_TRACEWID_get(swigCPtr);
      return ret;
    } 
  }

  public double SKETCHINC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SKETCHINC_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_SKETCHINC_get(swigCPtr);
      return ret;
    } 
  }

  public double FILLETRAD {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_FILLETRAD_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_FILLETRAD_get(swigCPtr);
      return ret;
    } 
  }

  public double THICKNESS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_THICKNESS_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_THICKNESS_get(swigCPtr);
      return ret;
    } 
  }

  public double ANGBASE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_ANGBASE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_ANGBASE_get(swigCPtr);
      return ret;
    } 
  }

  public double PDSIZE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PDSIZE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_PDSIZE_get(swigCPtr);
      return ret;
    } 
  }

  public double PLINEWID {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PLINEWID_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_PLINEWID_get(swigCPtr);
      return ret;
    } 
  }

  public double USERR1 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_USERR1_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_USERR1_get(swigCPtr);
      return ret;
    } 
  }

  public double USERR2 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_USERR2_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_USERR2_get(swigCPtr);
      return ret;
    } 
  }

  public double USERR3 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_USERR3_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_USERR3_get(swigCPtr);
      return ret;
    } 
  }

  public double USERR4 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_USERR4_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_USERR4_get(swigCPtr);
      return ret;
    } 
  }

  public double USERR5 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_USERR5_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_USERR5_get(swigCPtr);
      return ret;
    } 
  }

  public double CHAMFERA {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CHAMFERA_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_CHAMFERA_get(swigCPtr);
      return ret;
    } 
  }

  public double CHAMFERB {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CHAMFERB_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_CHAMFERB_get(swigCPtr);
      return ret;
    } 
  }

  public double CHAMFERC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CHAMFERC_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_CHAMFERC_get(swigCPtr);
      return ret;
    } 
  }

  public double CHAMFERD {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CHAMFERD_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_CHAMFERD_get(swigCPtr);
      return ret;
    } 
  }

  public double FACETRES {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_FACETRES_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_FACETRES_get(swigCPtr);
      return ret;
    } 
  }

  public double CMLSCALE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CMLSCALE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_CMLSCALE_get(swigCPtr);
      return ret;
    } 
  }

  public double CELTSCALE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CELTSCALE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_CELTSCALE_get(swigCPtr);
      return ret;
    } 
  }

  public string MENU {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_MENU_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_MENU_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_TimeBLL TDCREATE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TDCREATE_set(swigCPtr, Dwg_Bitcode_TimeBLL.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_TDCREATE_get(swigCPtr);
      Dwg_Bitcode_TimeBLL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_TimeBLL(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_TimeBLL TDUPDATE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TDUPDATE_set(swigCPtr, Dwg_Bitcode_TimeBLL.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_TDUPDATE_get(swigCPtr);
      Dwg_Bitcode_TimeBLL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_TimeBLL(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_TimeBLL TDUCREATE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TDUCREATE_set(swigCPtr, Dwg_Bitcode_TimeBLL.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_TDUCREATE_get(swigCPtr);
      Dwg_Bitcode_TimeBLL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_TimeBLL(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_TimeBLL TDUUPDATE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TDUUPDATE_set(swigCPtr, Dwg_Bitcode_TimeBLL.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_TDUUPDATE_get(swigCPtr);
      Dwg_Bitcode_TimeBLL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_TimeBLL(cPtr, false);
      return ret;
    } 
  }

  public uint unknown_15 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_15_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_15_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown_16 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_16_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_16_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown_17 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_17_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_17_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_TimeBLL TDINDWG {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TDINDWG_set(swigCPtr, Dwg_Bitcode_TimeBLL.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_TDINDWG_get(swigCPtr);
      Dwg_Bitcode_TimeBLL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_TimeBLL(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_TimeBLL TDUSRTIMER {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TDUSRTIMER_set(swigCPtr, Dwg_Bitcode_TimeBLL.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_TDUSRTIMER_get(swigCPtr);
      Dwg_Bitcode_TimeBLL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_TimeBLL(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color CECOLOR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CECOLOR_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_CECOLOR_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public ushort HANDLING {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_HANDLING_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_HANDLING_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref HANDSEED {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_HANDSEED_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_HANDSEED_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref CLAYER {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CLAYER_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_CLAYER_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref TEXTSTYLE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TEXTSTYLE_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_TEXTSTYLE_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref CELTYPE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CELTYPE_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_CELTYPE_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref CMATERIAL {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CMATERIAL_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_CMATERIAL_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DIMSTYLE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMSTYLE_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMSTYLE_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref CMLSTYLE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CMLSTYLE_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_CMLSTYLE_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public double PSVPSCALE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PSVPSCALE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_PSVPSCALE_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD PINSBASE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PINSBASE_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PINSBASE_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD PEXTMIN {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PEXTMIN_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PEXTMIN_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD PEXTMAX {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PEXTMAX_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PEXTMAX_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD PLIMMIN {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PLIMMIN_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PLIMMIN_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD PLIMMAX {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PLIMMAX_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PLIMMAX_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public double PELEVATION {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PELEVATION_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_PELEVATION_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD PUCSORG {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORG_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORG_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD PUCSXDIR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSXDIR_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSXDIR_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD PUCSYDIR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSYDIR_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSYDIR_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref PUCSNAME {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSNAME_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSNAME_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref PUCSBASE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSBASE_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSBASE_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref PUCSORTHOREF {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORTHOREF_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORTHOREF_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public ushort PUCSORTHOVIEW {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORTHOVIEW_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORTHOVIEW_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD PUCSORGTOP {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORGTOP_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORGTOP_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD PUCSORGBOTTOM {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORGBOTTOM_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORGBOTTOM_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD PUCSORGLEFT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORGLEFT_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORGLEFT_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD PUCSORGRIGHT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORGRIGHT_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORGRIGHT_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD PUCSORGFRONT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORGFRONT_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORGFRONT_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD PUCSORGBACK {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORGBACK_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_PUCSORGBACK_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD INSBASE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_INSBASE_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_INSBASE_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD EXTMIN {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_EXTMIN_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_EXTMIN_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD EXTMAX {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_EXTMAX_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_EXTMAX_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD LIMMIN {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LIMMIN_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_LIMMIN_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD LIMMAX {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LIMMAX_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_LIMMAX_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD VIEWCTR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_VIEWCTR_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_VIEWCTR_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public double ELEVATION {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_ELEVATION_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_ELEVATION_get(swigCPtr);
      return ret;
    } 
  }

  public double VIEWSIZE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_VIEWSIZE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_VIEWSIZE_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SNAPMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SNAPMODE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SNAPMODE_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD SNAPUNIT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SNAPUNIT_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_SNAPUNIT_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD SNAPBASE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SNAPBASE_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_SNAPBASE_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public double SNAPANG {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SNAPANG_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_SNAPANG_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SNAPSTYL {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SNAPSTYL_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SNAPSTYL_get(swigCPtr);
      return ret;
    } 
  }

  public ushort SNAPISOPAIR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SNAPISOPAIR_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_SNAPISOPAIR_get(swigCPtr);
      return ret;
    } 
  }

  public ushort GRIDMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_GRIDMODE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_GRIDMODE_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_2RD GRIDUNIT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_GRIDUNIT_set(swigCPtr, Dwg_Bitcode_2RD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_GRIDUNIT_get(swigCPtr);
      Dwg_Bitcode_2RD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2RD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD UCSORG {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSORG_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCSORG_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD UCSXDIR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSXDIR_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCSXDIR_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD UCSYDIR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSYDIR_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCSYDIR_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref UCSNAME {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSNAME_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCSNAME_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref UCSBASE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSBASE_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCSBASE_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public ushort UCSORTHOVIEW {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSORTHOVIEW_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_UCSORTHOVIEW_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref UCSORTHOREF {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSORTHOREF_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCSORTHOREF_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD UCSORGTOP {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSORGTOP_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCSORGTOP_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD UCSORGBOTTOM {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSORGBOTTOM_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCSORGBOTTOM_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD UCSORGLEFT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSORGLEFT_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCSORGLEFT_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD UCSORGRIGHT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSORGRIGHT_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCSORGRIGHT_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD UCSORGFRONT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSORGFRONT_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCSORGFRONT_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD UCSORGBACK {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCSORGBACK_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCSORGBACK_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public string DIMPOST {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMPOST_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMPOST_get(swigCPtr);
      return ret;
    } 
  }

  public string DIMAPOST {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMAPOST_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMAPOST_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMTOL {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTOL_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTOL_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMLIM {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMLIM_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMLIM_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMTIH {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTIH_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTIH_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMTOH {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTOH_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTOH_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMSE1 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMSE1_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMSE1_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMSE2 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMSE2_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMSE2_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMALT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMALT_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMALT_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMTOFL {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTOFL_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTOFL_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMSAH {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMSAH_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMSAH_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMTIX {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTIX_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTIX_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMSOXD {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMSOXD_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMSOXD_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMALTD {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTD_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTD_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMZIN {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMZIN_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMZIN_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMSD1 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMSD1_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMSD1_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMSD2 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMSD2_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMSD2_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMTOLJ {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTOLJ_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTOLJ_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMJUST {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMJUST_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMJUST_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMFIT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMFIT_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMFIT_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMUPT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMUPT_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMUPT_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMTZIN {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTZIN_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTZIN_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMMALTZ {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMMALTZ_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMMALTZ_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMMALTTZ {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMMALTTZ_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMMALTTZ_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMTAD {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTAD_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTAD_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMUNIT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMUNIT_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMUNIT_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMAUNIT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMAUNIT_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMAUNIT_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMDEC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMDEC_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMDEC_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMTDEC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTDEC_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTDEC_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMALTU {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTU_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTU_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMALTTD {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTTD_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTTD_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref DIMTXSTY {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTXSTY_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTXSTY_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public double DIMSCALE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMSCALE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMSCALE_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMASZ {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMASZ_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMASZ_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMEXO {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMEXO_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMEXO_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMDLI {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMDLI_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMDLI_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMEXE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMEXE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMEXE_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMRND {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMRND_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMRND_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMDLE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMDLE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMDLE_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMTP {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTP_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTP_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMTM {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTM_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTM_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMFXL {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMFXL_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMFXL_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMJOGANG {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMJOGANG_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMJOGANG_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMTFILL {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTFILL_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTFILL_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color DIMTFILLCLR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTFILLCLR_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTFILLCLR_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public ushort DIMAZIN {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMAZIN_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMAZIN_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMARCSYM {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMARCSYM_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMARCSYM_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMTXT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTXT_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTXT_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMCEN {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMCEN_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMCEN_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMTSZ {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTSZ_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTSZ_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMALTF {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTF_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTF_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMLFAC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMLFAC_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMLFAC_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMTVP {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTVP_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTVP_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMTFAC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTFAC_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTFAC_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMGAP {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMGAP_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMGAP_get(swigCPtr);
      return ret;
    } 
  }

  public string DIMPOST_T {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMPOST_T_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMPOST_T_get(swigCPtr);
      return ret;
    } 
  }

  public string DIMAPOST_T {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMAPOST_T_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMAPOST_T_get(swigCPtr);
      return ret;
    } 
  }

  public string DIMBLK_T {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMBLK_T_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMBLK_T_get(swigCPtr);
      return ret;
    } 
  }

  public string DIMBLK1_T {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMBLK1_T_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMBLK1_T_get(swigCPtr);
      return ret;
    } 
  }

  public string DIMBLK2_T {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMBLK2_T_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMBLK2_T_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMALTRND {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTRND_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTRND_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMCLRD_C {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMCLRD_C_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMCLRD_C_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMCLRE_C {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMCLRE_C_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMCLRE_C_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMCLRT_C {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMCLRT_C_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMCLRT_C_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color DIMCLRD {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMCLRD_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMCLRD_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color DIMCLRE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMCLRE_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMCLRE_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Color DIMCLRT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMCLRT_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMCLRT_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public ushort DIMADEC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMADEC_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMADEC_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMFRAC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMFRAC_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMFRAC_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMLUNIT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMLUNIT_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMLUNIT_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMDSEP {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMDSEP_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMDSEP_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMTMOVE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTMOVE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTMOVE_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMALTZ {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTZ_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTZ_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMALTTZ {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTTZ_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTTZ_get(swigCPtr);
      return ret;
    } 
  }

  public ushort DIMATFIT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMATFIT_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMATFIT_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMFXLON {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMFXLON_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMFXLON_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMTXTDIRECTION {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMTXTDIRECTION_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMTXTDIRECTION_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMALTMZF {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTMZF_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTMZF_get(swigCPtr);
      return ret;
    } 
  }

  public string DIMALTMZS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTMZS_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMALTMZS_get(swigCPtr);
      return ret;
    } 
  }

  public double DIMMZF {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMMZF_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMMZF_get(swigCPtr);
      return ret;
    } 
  }

  public string DIMMZS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMMZS_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMMZS_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref DIMLDRBLK {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMLDRBLK_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMLDRBLK_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DIMBLK {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMBLK_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMBLK_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DIMBLK1 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMBLK1_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMBLK1_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DIMBLK2 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMBLK2_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMBLK2_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DIMLTYPE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMLTYPE_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMLTYPE_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DIMLTEX1 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMLTEX1_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMLTEX1_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DIMLTEX2 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMLTEX2_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMLTEX2_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public short DIMLWD {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMLWD_set(swigCPtr, value);
    } 
    get {
      short ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMLWD_get(swigCPtr);
      return ret;
    } 
  }

  public short DIMLWE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMLWE_set(swigCPtr, value);
    } 
    get {
      short ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMLWE_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref BLOCK_CONTROL_OBJECT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_BLOCK_CONTROL_OBJECT_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_BLOCK_CONTROL_OBJECT_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref LAYER_CONTROL_OBJECT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LAYER_CONTROL_OBJECT_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_LAYER_CONTROL_OBJECT_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref STYLE_CONTROL_OBJECT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_STYLE_CONTROL_OBJECT_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_STYLE_CONTROL_OBJECT_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref LTYPE_CONTROL_OBJECT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LTYPE_CONTROL_OBJECT_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_LTYPE_CONTROL_OBJECT_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref VIEW_CONTROL_OBJECT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_VIEW_CONTROL_OBJECT_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_VIEW_CONTROL_OBJECT_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref UCS_CONTROL_OBJECT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_UCS_CONTROL_OBJECT_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_UCS_CONTROL_OBJECT_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref VPORT_CONTROL_OBJECT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_VPORT_CONTROL_OBJECT_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_VPORT_CONTROL_OBJECT_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref APPID_CONTROL_OBJECT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_APPID_CONTROL_OBJECT_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_APPID_CONTROL_OBJECT_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DIMSTYLE_CONTROL_OBJECT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMSTYLE_CONTROL_OBJECT_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DIMSTYLE_CONTROL_OBJECT_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref VPORT_ENTITY_CONTROL_OBJECT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_VPORT_ENTITY_CONTROL_OBJECT_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_VPORT_ENTITY_CONTROL_OBJECT_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DICTIONARY_ACAD_GROUP {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_ACAD_GROUP_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_ACAD_GROUP_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DICTIONARY_ACAD_MLINESTYLE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_ACAD_MLINESTYLE_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_ACAD_MLINESTYLE_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DICTIONARY_NAMED_OBJECT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_NAMED_OBJECT_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_NAMED_OBJECT_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public ushort TSTACKALIGN {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TSTACKALIGN_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_TSTACKALIGN_get(swigCPtr);
      return ret;
    } 
  }

  public ushort TSTACKSIZE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TSTACKSIZE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_TSTACKSIZE_get(swigCPtr);
      return ret;
    } 
  }

  public string HYPERLINKBASE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_HYPERLINKBASE_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_HYPERLINKBASE_get(swigCPtr);
      return ret;
    } 
  }

  public string STYLESHEET {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_STYLESHEET_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_STYLESHEET_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref DICTIONARY_LAYOUT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_LAYOUT_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_LAYOUT_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DICTIONARY_PLOTSETTINGS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_PLOTSETTINGS_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_PLOTSETTINGS_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DICTIONARY_PLOTSTYLENAME {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_PLOTSTYLENAME_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_PLOTSTYLENAME_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DICTIONARY_MATERIAL {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_MATERIAL_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_MATERIAL_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DICTIONARY_COLOR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_COLOR_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_COLOR_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DICTIONARY_VISUALSTYLE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_VISUALSTYLE_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_VISUALSTYLE_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DICTIONARY_LIGHTLIST {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_LIGHTLIST_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DICTIONARY_LIGHTLIST_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref unknown_20 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_20_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_20_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public uint FLAGS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_FLAGS_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_FLAGS_get(swigCPtr);
      return ret;
    } 
  }

  public short CELWEIGHT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CELWEIGHT_set(swigCPtr, value);
    } 
    get {
      short ret = LibreDWGPINVOKE.Dwg_Header_Variables_CELWEIGHT_get(swigCPtr);
      return ret;
    } 
  }

  public byte ENDCAPS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_ENDCAPS_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_ENDCAPS_get(swigCPtr);
      return ret;
    } 
  }

  public byte JOINSTYLE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_JOINSTYLE_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_JOINSTYLE_get(swigCPtr);
      return ret;
    } 
  }

  public byte LWDISPLAY {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LWDISPLAY_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_LWDISPLAY_get(swigCPtr);
      return ret;
    } 
  }

  public byte XEDIT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_XEDIT_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_XEDIT_get(swigCPtr);
      return ret;
    } 
  }

  public byte EXTNAMES {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_EXTNAMES_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_EXTNAMES_get(swigCPtr);
      return ret;
    } 
  }

  public byte PSTYLEMODE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PSTYLEMODE_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_PSTYLEMODE_get(swigCPtr);
      return ret;
    } 
  }

  public byte OLESTARTUP {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_OLESTARTUP_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_OLESTARTUP_get(swigCPtr);
      return ret;
    } 
  }

  public ushort INSUNITS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_INSUNITS_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_INSUNITS_get(swigCPtr);
      return ret;
    } 
  }

  public ushort CEPSNTYPE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CEPSNTYPE_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_CEPSNTYPE_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref CPSNID {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CPSNID_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_CPSNID_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public string FINGERPRINTGUID {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_FINGERPRINTGUID_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_FINGERPRINTGUID_get(swigCPtr);
      return ret;
    } 
  }

  public string VERSIONGUID {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_VERSIONGUID_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_VERSIONGUID_get(swigCPtr);
      return ret;
    } 
  }

  public byte SORTENTS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SORTENTS_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_SORTENTS_get(swigCPtr);
      return ret;
    } 
  }

  public byte INDEXCTL {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_INDEXCTL_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_INDEXCTL_get(swigCPtr);
      return ret;
    } 
  }

  public byte HIDETEXT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_HIDETEXT_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_HIDETEXT_get(swigCPtr);
      return ret;
    } 
  }

  public byte XCLIPFRAME {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_XCLIPFRAME_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_XCLIPFRAME_get(swigCPtr);
      return ret;
    } 
  }

  public byte DIMASSOC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DIMASSOC_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DIMASSOC_get(swigCPtr);
      return ret;
    } 
  }

  public byte HALOGAP {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_HALOGAP_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_HALOGAP_get(swigCPtr);
      return ret;
    } 
  }

  public ushort OBSCOLOR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_OBSCOLOR_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_OBSCOLOR_get(swigCPtr);
      return ret;
    } 
  }

  public ushort INTERSECTIONCOLOR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_INTERSECTIONCOLOR_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_INTERSECTIONCOLOR_get(swigCPtr);
      return ret;
    } 
  }

  public byte OBSLTYPE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_OBSLTYPE_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_OBSLTYPE_get(swigCPtr);
      return ret;
    } 
  }

  public byte INTERSECTIONDISPLAY {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_INTERSECTIONDISPLAY_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_INTERSECTIONDISPLAY_get(swigCPtr);
      return ret;
    } 
  }

  public string PROJECTNAME {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PROJECTNAME_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Header_Variables_PROJECTNAME_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref BLOCK_RECORD_PSPACE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_BLOCK_RECORD_PSPACE_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_BLOCK_RECORD_PSPACE_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref BLOCK_RECORD_MSPACE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_BLOCK_RECORD_MSPACE_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_BLOCK_RECORD_MSPACE_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref LTYPE_BYLAYER {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LTYPE_BYLAYER_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_LTYPE_BYLAYER_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref LTYPE_BYBLOCK {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LTYPE_BYBLOCK_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_LTYPE_BYBLOCK_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref LTYPE_CONTINUOUS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LTYPE_CONTINUOUS_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_LTYPE_CONTINUOUS_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public byte CAMERADISPLAY {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CAMERADISPLAY_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_CAMERADISPLAY_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown_21 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_21_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_21_get(swigCPtr);
      return ret;
    } 
  }

  public uint unknown_22 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_22_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_22_get(swigCPtr);
      return ret;
    } 
  }

  public double unknown_23 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_23_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_23_get(swigCPtr);
      return ret;
    } 
  }

  public double STEPSPERSEC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_STEPSPERSEC_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_STEPSPERSEC_get(swigCPtr);
      return ret;
    } 
  }

  public double STEPSIZE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_STEPSIZE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_STEPSIZE_get(swigCPtr);
      return ret;
    } 
  }

  public double _3DDWFPREC {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables__3DDWFPREC_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables__3DDWFPREC_get(swigCPtr);
      return ret;
    } 
  }

  public double LENSLENGTH {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LENSLENGTH_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_LENSLENGTH_get(swigCPtr);
      return ret;
    } 
  }

  public double CAMERAHEIGHT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CAMERAHEIGHT_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_CAMERAHEIGHT_get(swigCPtr);
      return ret;
    } 
  }

  public byte SOLIDHIST {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SOLIDHIST_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_SOLIDHIST_get(swigCPtr);
      return ret;
    } 
  }

  public byte SHOWHIST {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SHOWHIST_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_SHOWHIST_get(swigCPtr);
      return ret;
    } 
  }

  public double PSOLWIDTH {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PSOLWIDTH_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_PSOLWIDTH_get(swigCPtr);
      return ret;
    } 
  }

  public double PSOLHEIGHT {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_PSOLHEIGHT_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_PSOLHEIGHT_get(swigCPtr);
      return ret;
    } 
  }

  public double LOFTANG1 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LOFTANG1_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_LOFTANG1_get(swigCPtr);
      return ret;
    } 
  }

  public double LOFTANG2 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LOFTANG2_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_LOFTANG2_get(swigCPtr);
      return ret;
    } 
  }

  public double LOFTMAG1 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LOFTMAG1_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_LOFTMAG1_get(swigCPtr);
      return ret;
    } 
  }

  public double LOFTMAG2 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LOFTMAG2_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_LOFTMAG2_get(swigCPtr);
      return ret;
    } 
  }

  public ushort LOFTPARAM {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LOFTPARAM_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_LOFTPARAM_get(swigCPtr);
      return ret;
    } 
  }

  public byte LOFTNORMALS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LOFTNORMALS_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_LOFTNORMALS_get(swigCPtr);
      return ret;
    } 
  }

  public double LATITUDE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LATITUDE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_LATITUDE_get(swigCPtr);
      return ret;
    } 
  }

  public double LONGITUDE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LONGITUDE_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_LONGITUDE_get(swigCPtr);
      return ret;
    } 
  }

  public double NORTHDIRECTION {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_NORTHDIRECTION_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_NORTHDIRECTION_get(swigCPtr);
      return ret;
    } 
  }

  public uint TIMEZONE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TIMEZONE_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Header_Variables_TIMEZONE_get(swigCPtr);
      return ret;
    } 
  }

  public byte LIGHTGLYPHDISPLAY {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_LIGHTGLYPHDISPLAY_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_LIGHTGLYPHDISPLAY_get(swigCPtr);
      return ret;
    } 
  }

  public byte TILEMODELIGHTSYNCH {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_TILEMODELIGHTSYNCH_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_TILEMODELIGHTSYNCH_get(swigCPtr);
      return ret;
    } 
  }

  public byte DWFFRAME {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DWFFRAME_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DWFFRAME_get(swigCPtr);
      return ret;
    } 
  }

  public byte DGNFRAME {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DGNFRAME_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_DGNFRAME_get(swigCPtr);
      return ret;
    } 
  }

  public byte REALWORLDSCALE {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_REALWORLDSCALE_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_REALWORLDSCALE_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color INTERFERECOLOR {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_INTERFERECOLOR_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_INTERFERECOLOR_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref INTERFEREOBJVS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_INTERFEREOBJVS_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_INTERFEREOBJVS_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref INTERFEREVPVS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_INTERFEREVPVS_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_INTERFEREVPVS_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref DRAGVS {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_DRAGVS_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Header_Variables_DRAGVS_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public byte CSHADOW {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_CSHADOW_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Header_Variables_CSHADOW_get(swigCPtr);
      return ret;
    } 
  }

  public double SHADOWPLANELOCATION {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_SHADOWPLANELOCATION_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Header_Variables_SHADOWPLANELOCATION_get(swigCPtr);
      return ret;
    } 
  }

  public ushort unknown_54 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_54_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_54_get(swigCPtr);
      return ret;
    } 
  }

  public ushort unknown_55 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_55_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_55_get(swigCPtr);
      return ret;
    } 
  }

  public ushort unknown_56 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_56_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_56_get(swigCPtr);
      return ret;
    } 
  }

  public ushort unknown_57 {
    set {
      LibreDWGPINVOKE.Dwg_Header_Variables_unknown_57_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Header_Variables_unknown_57_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Header_Variables() : this(LibreDWGPINVOKE.new_Dwg_Header_Variables(), true) {
  }

}
