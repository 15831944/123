//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class LibreDWG {
  public static Dwg_Object new_Dwg_Object_Array(int nelements) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.new_Dwg_Object_Array(nelements);
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static void delete_Dwg_Object_Array(Dwg_Object ary) {
    LibreDWGPINVOKE.delete_Dwg_Object_Array(Dwg_Object.getCPtr(ary));
  }

  public static Dwg_Object Dwg_Object_Array_getitem(Dwg_Object ary, int index) {
    Dwg_Object ret = new Dwg_Object(LibreDWGPINVOKE.Dwg_Object_Array_getitem(Dwg_Object.getCPtr(ary), index), true);
    return ret;
  }

  public static void Dwg_Object_Array_setitem(Dwg_Object ary, int index, Dwg_Object value) {
    LibreDWGPINVOKE.Dwg_Object_Array_setitem(Dwg_Object.getCPtr(ary), index, Dwg_Object.getCPtr(value));
    if (LibreDWGPINVOKE.SWIGPendingException.Pending) throw LibreDWGPINVOKE.SWIGPendingException.Retrieve();
  }

  public static string dwg_color_method_name(uint method) {
    string ret = LibreDWGPINVOKE.dwg_color_method_name(method);
    return ret;
  }

  public static int dwg_read_file(string filename, Dwg_Data dwg) {
    int ret = LibreDWGPINVOKE.dwg_read_file(filename, Dwg_Data.getCPtr(dwg));
    return ret;
  }

  public static int dxf_read_file(string filename, Dwg_Data dwg) {
    int ret = LibreDWGPINVOKE.dxf_read_file(filename, Dwg_Data.getCPtr(dwg));
    return ret;
  }

  public static SWIGTYPE_p_unsigned_char dwg_bmp(Dwg_Data arg0, SWIGTYPE_p_unsigned_int arg1) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_bmp(Dwg_Data.getCPtr(arg0), SWIGTYPE_p_unsigned_int.getCPtr(arg1));
    SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    return ret;
  }

  public static int dxf_cvt_lweight(short value) {
    int ret = LibreDWGPINVOKE.dxf_cvt_lweight(value);
    return ret;
  }

  public static short dxf_revcvt_lweight(int lw) {
    short ret = LibreDWGPINVOKE.dxf_revcvt_lweight(lw);
    return ret;
  }

  public static Dwg_Object_Ref dwg_find_tablehandle(Dwg_Data dwg, string name, string table) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_find_tablehandle(Dwg_Data.getCPtr(dwg), name, table);
    Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
    return ret;
  }

  public static Dwg_Object_Ref dwg_find_table_control(Dwg_Data dwg, string table) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_find_table_control(Dwg_Data.getCPtr(dwg), table);
    Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
    return ret;
  }

  public static Dwg_Object_Ref dwg_find_dictionary(Dwg_Data dwg, string name) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_find_dictionary(Dwg_Data.getCPtr(dwg), name);
    Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
    return ret;
  }

  public static Dwg_Object_Ref dwg_find_dicthandle(Dwg_Data dwg, Dwg_Object_Ref dict, string name) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_find_dicthandle(Dwg_Data.getCPtr(dwg), Dwg_Object_Ref.getCPtr(dict), name);
    Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
    return ret;
  }

  public static Dwg_Object_Ref dwg_find_dicthandle_objname(Dwg_Data dwg, Dwg_Object_Ref dict, string name) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_find_dicthandle_objname(Dwg_Data.getCPtr(dwg), Dwg_Object_Ref.getCPtr(dict), name);
    Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
    return ret;
  }

  public static string dwg_find_table_extname(Dwg_Data dwg, Dwg_Object obj) {
    string ret = LibreDWGPINVOKE.dwg_find_table_extname(Dwg_Data.getCPtr(dwg), Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static string dwg_variable_dict(Dwg_Data dwg, string name) {
    string ret = LibreDWGPINVOKE.dwg_variable_dict(Dwg_Data.getCPtr(dwg), name);
    return ret;
  }

  public static double dwg_model_x_min(Dwg_Data arg0) {
    double ret = LibreDWGPINVOKE.dwg_model_x_min(Dwg_Data.getCPtr(arg0));
    return ret;
  }

  public static double dwg_model_x_max(Dwg_Data arg0) {
    double ret = LibreDWGPINVOKE.dwg_model_x_max(Dwg_Data.getCPtr(arg0));
    return ret;
  }

  public static double dwg_model_y_min(Dwg_Data arg0) {
    double ret = LibreDWGPINVOKE.dwg_model_y_min(Dwg_Data.getCPtr(arg0));
    return ret;
  }

  public static double dwg_model_y_max(Dwg_Data arg0) {
    double ret = LibreDWGPINVOKE.dwg_model_y_max(Dwg_Data.getCPtr(arg0));
    return ret;
  }

  public static double dwg_model_z_min(Dwg_Data arg0) {
    double ret = LibreDWGPINVOKE.dwg_model_z_min(Dwg_Data.getCPtr(arg0));
    return ret;
  }

  public static double dwg_model_z_max(Dwg_Data arg0) {
    double ret = LibreDWGPINVOKE.dwg_model_z_max(Dwg_Data.getCPtr(arg0));
    return ret;
  }

  public static double dwg_page_x_min(Dwg_Data arg0) {
    double ret = LibreDWGPINVOKE.dwg_page_x_min(Dwg_Data.getCPtr(arg0));
    return ret;
  }

  public static double dwg_page_x_max(Dwg_Data arg0) {
    double ret = LibreDWGPINVOKE.dwg_page_x_max(Dwg_Data.getCPtr(arg0));
    return ret;
  }

  public static double dwg_page_y_min(Dwg_Data arg0) {
    double ret = LibreDWGPINVOKE.dwg_page_y_min(Dwg_Data.getCPtr(arg0));
    return ret;
  }

  public static double dwg_page_y_max(Dwg_Data arg0) {
    double ret = LibreDWGPINVOKE.dwg_page_y_max(Dwg_Data.getCPtr(arg0));
    return ret;
  }

  public static Dwg_Object_BLOCK_CONTROL dwg_block_control(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_block_control(Dwg_Data.getCPtr(dwg));
    Dwg_Object_BLOCK_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_BLOCK_CONTROL(cPtr, false);
    return ret;
  }

  public static Dwg_Object_Ref dwg_model_space_ref(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_model_space_ref(Dwg_Data.getCPtr(dwg));
    Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
    return ret;
  }

  public static Dwg_Object_Ref dwg_paper_space_ref(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_paper_space_ref(Dwg_Data.getCPtr(dwg));
    Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
    return ret;
  }

  public static Dwg_Object dwg_model_space_object(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_model_space_object(Dwg_Data.getCPtr(dwg));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static uint dwg_get_layer_count(Dwg_Data dwg) {
    uint ret = LibreDWGPINVOKE.dwg_get_layer_count(Dwg_Data.getCPtr(dwg));
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_LAYER dwg_get_layers(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_get_layers(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_LAYER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_LAYER(cPtr, false);
    return ret;
  }

  public static uint dwg_get_num_objects(Dwg_Data dwg) {
    uint ret = LibreDWGPINVOKE.dwg_get_num_objects(Dwg_Data.getCPtr(dwg));
    return ret;
  }

  public static uint dwg_get_object_num_objects(Dwg_Data dwg) {
    uint ret = LibreDWGPINVOKE.dwg_get_object_num_objects(Dwg_Data.getCPtr(dwg));
    return ret;
  }

  public static int dwg_class_is_entity(Dwg_Class klass) {
    int ret = LibreDWGPINVOKE.dwg_class_is_entity(Dwg_Class.getCPtr(klass));
    return ret;
  }

  public static int dwg_obj_is_control(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_obj_is_control(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_obj_is_table(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_obj_is_table(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_obj_is_subentity(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_obj_is_subentity(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_obj_has_subentity(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_obj_has_subentity(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static uint dwg_get_num_entities(Dwg_Data arg0) {
    uint ret = LibreDWGPINVOKE.dwg_get_num_entities(Dwg_Data.getCPtr(arg0));
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_entity dwg_get_entities(Dwg_Data arg0) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_get_entities(Dwg_Data.getCPtr(arg0));
    SWIGTYPE_p_p__dwg_object_entity ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_entity(cPtr, false);
    return ret;
  }

  public static Dwg_Object_LAYER dwg_get_entity_layer(Dwg_Object_Entity arg0) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_get_entity_layer(Dwg_Object_Entity.getCPtr(arg0));
    Dwg_Object_LAYER ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_LAYER(cPtr, false);
    return ret;
  }

  public static Dwg_Object dwg_next_object(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_next_object(Dwg_Object.getCPtr(obj));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object dwg_next_entity(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_next_entity(Dwg_Object.getCPtr(obj));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object dwg_ref_object(Dwg_Data dwg, Dwg_Object_Ref ref_) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_ref_object(Dwg_Data.getCPtr(dwg), Dwg_Object_Ref.getCPtr(ref_));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object dwg_ref_object_relative(Dwg_Data dwg, Dwg_Object_Ref ref_, Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_ref_object_relative(Dwg_Data.getCPtr(dwg), Dwg_Object_Ref.getCPtr(ref_), Dwg_Object.getCPtr(obj));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object dwg_ref_object_silent(Dwg_Data dwg, Dwg_Object_Ref ref_) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_ref_object_silent(Dwg_Data.getCPtr(dwg), Dwg_Object_Ref.getCPtr(ref_));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object get_first_owned_entity(Dwg_Object hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.get_first_owned_entity(Dwg_Object.getCPtr(hdr));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object get_next_owned_entity(Dwg_Object hdr, Dwg_Object current) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.get_next_owned_entity(Dwg_Object.getCPtr(hdr), Dwg_Object.getCPtr(current));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object get_first_owned_subentity(Dwg_Object owner) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.get_first_owned_subentity(Dwg_Object.getCPtr(owner));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object get_next_owned_subentity(Dwg_Object owner, Dwg_Object current) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.get_next_owned_subentity(Dwg_Object.getCPtr(owner), Dwg_Object.getCPtr(current));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object get_first_owned_block(Dwg_Object hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.get_first_owned_block(Dwg_Object.getCPtr(hdr));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object get_last_owned_block(Dwg_Object hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.get_last_owned_block(Dwg_Object.getCPtr(hdr));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object get_next_owned_block(Dwg_Object hdr, Dwg_Object current) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.get_next_owned_block(Dwg_Object.getCPtr(hdr), Dwg_Object.getCPtr(current));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object get_next_owned_block_entity(Dwg_Object hdr, Dwg_Object current) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.get_next_owned_block_entity(Dwg_Object.getCPtr(hdr), Dwg_Object.getCPtr(current));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object dwg_resolve_handle(Dwg_Data dwg, uint absref) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_resolve_handle(Dwg_Data.getCPtr(dwg), absref);
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object dwg_resolve_handle_silent(Dwg_Data dwg, uint absref) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_resolve_handle_silent(Dwg_Data.getCPtr(dwg), absref);
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static int dwg_resolve_handleref(Dwg_Object_Ref ref_, Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_resolve_handleref(Dwg_Object_Ref.getCPtr(ref_), Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static Dwg_Section_Type dwg_section_type(string name) {
    Dwg_Section_Type ret = (Dwg_Section_Type)LibreDWGPINVOKE.dwg_section_type(name);
    return ret;
  }

  public static Dwg_Section_Type dwg_section_wtype(SWIGTYPE_p_unsigned_short wname) {
    Dwg_Section_Type ret = (Dwg_Section_Type)LibreDWGPINVOKE.dwg_section_wtype(SWIGTYPE_p_unsigned_short.getCPtr(wname));
    return ret;
  }

  public static string dwg_section_name(Dwg_Data dwg, uint sec_id) {
    string ret = LibreDWGPINVOKE.dwg_section_name(Dwg_Data.getCPtr(dwg), sec_id);
    return ret;
  }

  public static void dwg_free(Dwg_Data dwg) {
    LibreDWGPINVOKE.dwg_free(Dwg_Data.getCPtr(dwg));
  }

  public static void dwg_free_object(Dwg_Object obj) {
    LibreDWGPINVOKE.dwg_free_object(Dwg_Object.getCPtr(obj));
  }

  public static Dwg_Object_Ref dwg_new_ref(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_new_ref(Dwg_Data.getCPtr(dwg));
    Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
    return ret;
  }

  public static int dwg_add_handle(Dwg_Handle hdl, byte code, uint value, Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_add_handle(Dwg_Handle.getCPtr(hdl), code, value, Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static Dwg_Object_Ref dwg_add_handleref(Dwg_Data dwg, byte code, uint value, Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_add_handleref(Dwg_Data.getCPtr(dwg), code, value, Dwg_Object.getCPtr(obj));
    Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
    return ret;
  }

  public static string dwg_version_type(Dwg_Version_Type version) {
    string ret = LibreDWGPINVOKE.dwg_version_type((int)version);
    return ret;
  }

  public static Dwg_Version_Type dwg_version_as(string version) {
    Dwg_Version_Type ret = (Dwg_Version_Type)LibreDWGPINVOKE.dwg_version_as(version);
    return ret;
  }

  public static void dwg_errstrings(int error) {
    LibreDWGPINVOKE.dwg_errstrings(error);
  }

  public static Dwg_RGB_Palette dwg_rgb_palette() {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_rgb_palette();
    Dwg_RGB_Palette ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_RGB_Palette(cPtr, false);
    return ret;
  }

  public static ushort dwg_find_color_index(uint rgb) {
    ushort ret = LibreDWGPINVOKE.dwg_find_color_index(rgb);
    return ret;
  }

  public static int dwg_add_object(Dwg_Data dwg) {
    int ret = LibreDWGPINVOKE.dwg_add_object(Dwg_Data.getCPtr(dwg));
    return ret;
  }

  public static int dwg_setup_TEXT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_TEXT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_ATTRIB(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_ATTRIB(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_ATTDEF(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_ATTDEF(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_BLOCK(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_BLOCK(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_ENDBLK(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_ENDBLK(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_SEQEND(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_SEQEND(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_INSERT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_INSERT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_MINSERT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_MINSERT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VERTEX_2D(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VERTEX_2D(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VERTEX_3D(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VERTEX_3D(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VERTEX_MESH(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VERTEX_MESH(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VERTEX_PFACE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VERTEX_PFACE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VERTEX_PFACE_FACE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VERTEX_PFACE_FACE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_POLYLINE_2D(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_POLYLINE_2D(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_POLYLINE_3D(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_POLYLINE_3D(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_ARC(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_ARC(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_CIRCLE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_CIRCLE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_LINE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_LINE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DIMENSION_ORDINATE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DIMENSION_ORDINATE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DIMENSION_LINEAR(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DIMENSION_LINEAR(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DIMENSION_ALIGNED(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DIMENSION_ALIGNED(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DIMENSION_ANG3PT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DIMENSION_ANG3PT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DIMENSION_ANG2LN(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DIMENSION_ANG2LN(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DIMENSION_RADIUS(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DIMENSION_RADIUS(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DIMENSION_DIAMETER(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DIMENSION_DIAMETER(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_POINT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_POINT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup__3DFACE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup__3DFACE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup__3DSOLID(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup__3DSOLID(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_POLYLINE_PFACE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_POLYLINE_PFACE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_POLYLINE_MESH(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_POLYLINE_MESH(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_SOLID(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_SOLID(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_TRACE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_TRACE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_SHAPE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_SHAPE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VIEWPORT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VIEWPORT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_ELLIPSE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_ELLIPSE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_SPLINE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_SPLINE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_REGION(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_REGION(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_BODY(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_BODY(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_RAY(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_RAY(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_XLINE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_XLINE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DICTIONARY(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DICTIONARY(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_OLEFRAME(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_OLEFRAME(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_MTEXT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_MTEXT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_LEADER(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_LEADER(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_TOLERANCE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_TOLERANCE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_MLINE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_MLINE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_BLOCK_CONTROL(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_BLOCK_CONTROL(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_BLOCK_HEADER(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_BLOCK_HEADER(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_LAYER_CONTROL(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_LAYER_CONTROL(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_LAYER(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_LAYER(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_STYLE_CONTROL(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_STYLE_CONTROL(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_STYLE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_STYLE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_LTYPE_CONTROL(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_LTYPE_CONTROL(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_LTYPE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_LTYPE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VIEW_CONTROL(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VIEW_CONTROL(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VIEW(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VIEW(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_UCS_CONTROL(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_UCS_CONTROL(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_UCS(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_UCS(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VPORT_CONTROL(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VPORT_CONTROL(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VPORT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VPORT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_APPID_CONTROL(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_APPID_CONTROL(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_APPID(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_APPID(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DIMSTYLE_CONTROL(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DIMSTYLE_CONTROL(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DIMSTYLE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DIMSTYLE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VPORT_ENTITY_CONTROL(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VPORT_ENTITY_CONTROL(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VPORT_ENTITY_HEADER(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VPORT_ENTITY_HEADER(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_GROUP(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_GROUP(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_MLINESTYLE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_MLINESTYLE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_OLE2FRAME(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_OLE2FRAME(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DUMMY(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DUMMY(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_LONG_TRANSACTION(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_LONG_TRANSACTION(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_LWPOLYLINE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_LWPOLYLINE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_HATCH(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_HATCH(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_XRECORD(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_XRECORD(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_PLACEHOLDER(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_PLACEHOLDER(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_LAYOUT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_LAYOUT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_PROXY_ENTITY(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_PROXY_ENTITY(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_PROXY_OBJECT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_PROXY_OBJECT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_UNKNOWN_ENT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_UNKNOWN_ENT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_UNKNOWN_OBJ(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_UNKNOWN_OBJ(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DICTIONARYVAR(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DICTIONARYVAR(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DICTIONARYWDFLT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DICTIONARYWDFLT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DYNAMICBLOCKPURGEPREVENTER(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DYNAMICBLOCKPURGEPREVENTER(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_FIELD(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_FIELD(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_FIELDLIST(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_FIELDLIST(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_IDBUFFER(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_IDBUFFER(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_IMAGE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_IMAGE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_IMAGEDEF(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_IMAGEDEF(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_IMAGEDEF_REACTOR(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_IMAGEDEF_REACTOR(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_LAYER_INDEX(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_LAYER_INDEX(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_MLEADERSTYLE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_MLEADERSTYLE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_RASTERVARIABLES(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_RASTERVARIABLES(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_SCALE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_SCALE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_SORTENTSTABLE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_SORTENTSTABLE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_SPATIAL_FILTER(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_SPATIAL_FILTER(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_SPATIAL_INDEX(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_SPATIAL_INDEX(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_WIPEOUTVARIABLES(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_WIPEOUTVARIABLES(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_WIPEOUT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_WIPEOUT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_ARC_DIMENSION(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_ARC_DIMENSION(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_ASSOCDEPENDENCY(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_ASSOCDEPENDENCY(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_ASSOCALIGNEDDIMACTIONBODY(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_ASSOCALIGNEDDIMACTIONBODY(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_ASSOCPLANESURFACEACTIONBODY(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_ASSOCPLANESURFACEACTIONBODY(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_CAMERA(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_CAMERA(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DIMASSOC(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DIMASSOC(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_DBCOLOR(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_DBCOLOR(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_GEODATA(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_GEODATA(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_HELIX(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_HELIX(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_LIGHT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_LIGHT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_LIGHTLIST(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_LIGHTLIST(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_MATERIAL(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_MATERIAL(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_MENTALRAYRENDERSETTINGS(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_MENTALRAYRENDERSETTINGS(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_MESH(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_MESH(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_MULTILEADER(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_MULTILEADER(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_OBJECT_PTR(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_OBJECT_PTR(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_PERSUBENTMGR(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_PERSUBENTMGR(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_PLOTSETTINGS(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_PLOTSETTINGS(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_RENDERSETTINGS(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_RENDERSETTINGS(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_RAPIDRTRENDERSETTINGS(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_RAPIDRTRENDERSETTINGS(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_SECTIONOBJECT(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_SECTIONOBJECT(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_SECTION_MANAGER(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_SECTION_MANAGER(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_SUN(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_SUN(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_TABLEGEOMETRY(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_TABLEGEOMETRY(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_TABLESTYLE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_TABLESTYLE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_UNDERLAY(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_UNDERLAY(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_UNDERLAYDEFINITION(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_UNDERLAYDEFINITION(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_setup_VISUALSTYLE(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_setup_VISUALSTYLE(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static bool is_dwg_entity(string name) {
    bool ret = LibreDWGPINVOKE.is_dwg_entity(name);
    return ret;
  }

  public static bool is_dwg_object(string name) {
    bool ret = LibreDWGPINVOKE.is_dwg_object(name);
    return ret;
  }

  public static bool dwg_dynapi_header_value(Dwg_Data dwg, string fieldname, SWIGTYPE_p_void out_, Dwg_DYNAPI_field fp) {
    bool ret = LibreDWGPINVOKE.dwg_dynapi_header_value(Dwg_Data.getCPtr(dwg), fieldname, SWIGTYPE_p_void.getCPtr(out_), Dwg_DYNAPI_field.getCPtr(fp));
    return ret;
  }

  public static bool dwg_dynapi_entity_value(SWIGTYPE_p_void entity, string dxfname, string fieldname, SWIGTYPE_p_void out_, Dwg_DYNAPI_field fp) {
    bool ret = LibreDWGPINVOKE.dwg_dynapi_entity_value(SWIGTYPE_p_void.getCPtr(entity), dxfname, fieldname, SWIGTYPE_p_void.getCPtr(out_), Dwg_DYNAPI_field.getCPtr(fp));
    return ret;
  }

  public static bool dwg_dynapi_common_value(SWIGTYPE_p_void _obj, string fieldname, SWIGTYPE_p_void out_, Dwg_DYNAPI_field fp) {
    bool ret = LibreDWGPINVOKE.dwg_dynapi_common_value(SWIGTYPE_p_void.getCPtr(_obj), fieldname, SWIGTYPE_p_void.getCPtr(out_), Dwg_DYNAPI_field.getCPtr(fp));
    return ret;
  }

  public static bool dwg_dynapi_subclass_value(SWIGTYPE_p_void ptr, string subclass, string fieldname, SWIGTYPE_p_void out_, Dwg_DYNAPI_field fp) {
    bool ret = LibreDWGPINVOKE.dwg_dynapi_subclass_value(SWIGTYPE_p_void.getCPtr(ptr), subclass, fieldname, SWIGTYPE_p_void.getCPtr(out_), Dwg_DYNAPI_field.getCPtr(fp));
    return ret;
  }

  public static bool dwg_dynapi_header_utf8text(Dwg_Data dwg, string fieldname, SWIGTYPE_p_p_char textp, SWIGTYPE_p_int isnew, Dwg_DYNAPI_field fp) {
    bool ret = LibreDWGPINVOKE.dwg_dynapi_header_utf8text(Dwg_Data.getCPtr(dwg), fieldname, SWIGTYPE_p_p_char.getCPtr(textp), SWIGTYPE_p_int.getCPtr(isnew), Dwg_DYNAPI_field.getCPtr(fp));
    return ret;
  }

  public static bool dwg_dynapi_entity_utf8text(SWIGTYPE_p_void entity, string name, string fieldname, SWIGTYPE_p_p_char textp, SWIGTYPE_p_int isnew, Dwg_DYNAPI_field fp) {
    bool ret = LibreDWGPINVOKE.dwg_dynapi_entity_utf8text(SWIGTYPE_p_void.getCPtr(entity), name, fieldname, SWIGTYPE_p_p_char.getCPtr(textp), SWIGTYPE_p_int.getCPtr(isnew), Dwg_DYNAPI_field.getCPtr(fp));
    return ret;
  }

  public static bool dwg_dynapi_common_utf8text(SWIGTYPE_p_void _obj, string fieldname, SWIGTYPE_p_p_char textp, SWIGTYPE_p_int isnew, Dwg_DYNAPI_field fp) {
    bool ret = LibreDWGPINVOKE.dwg_dynapi_common_utf8text(SWIGTYPE_p_void.getCPtr(_obj), fieldname, SWIGTYPE_p_p_char.getCPtr(textp), SWIGTYPE_p_int.getCPtr(isnew), Dwg_DYNAPI_field.getCPtr(fp));
    return ret;
  }

  public static bool dwg_dynapi_header_set_value(Dwg_Data dwg, string fieldname, SWIGTYPE_p_void value, bool is_utf8) {
    bool ret = LibreDWGPINVOKE.dwg_dynapi_header_set_value(Dwg_Data.getCPtr(dwg), fieldname, SWIGTYPE_p_void.getCPtr(value), is_utf8);
    return ret;
  }

  public static bool dwg_dynapi_entity_set_value(SWIGTYPE_p_void entity, string dxfname, string fieldname, SWIGTYPE_p_void value, bool is_utf8) {
    bool ret = LibreDWGPINVOKE.dwg_dynapi_entity_set_value(SWIGTYPE_p_void.getCPtr(entity), dxfname, fieldname, SWIGTYPE_p_void.getCPtr(value), is_utf8);
    return ret;
  }

  public static bool dwg_dynapi_common_set_value(SWIGTYPE_p_void _obj, string fieldname, SWIGTYPE_p_void value, bool is_utf8) {
    bool ret = LibreDWGPINVOKE.dwg_dynapi_common_set_value(SWIGTYPE_p_void.getCPtr(_obj), fieldname, SWIGTYPE_p_void.getCPtr(value), is_utf8);
    return ret;
  }

  public static string dwg_dynapi_handle_name(Dwg_Data dwg, Dwg_Object_Ref hdl) {
    string ret = LibreDWGPINVOKE.dwg_dynapi_handle_name(Dwg_Data.getCPtr(dwg), Dwg_Object_Ref.getCPtr(hdl));
    return ret;
  }

  public static Dwg_DYNAPI_field dwg_dynapi_header_field(string fieldname) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_dynapi_header_field(fieldname);
    Dwg_DYNAPI_field ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_DYNAPI_field(cPtr, false);
    return ret;
  }

  public static Dwg_DYNAPI_field dwg_dynapi_entity_field(string name, string fieldname) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_dynapi_entity_field(name, fieldname);
    Dwg_DYNAPI_field ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_DYNAPI_field(cPtr, false);
    return ret;
  }

  public static Dwg_DYNAPI_field dwg_dynapi_subclass_field(string name, string fieldname) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_dynapi_subclass_field(name, fieldname);
    Dwg_DYNAPI_field ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_DYNAPI_field(cPtr, false);
    return ret;
  }

  public static Dwg_DYNAPI_field dwg_dynapi_common_entity_field(string fieldname) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_dynapi_common_entity_field(fieldname);
    Dwg_DYNAPI_field ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_DYNAPI_field(cPtr, false);
    return ret;
  }

  public static Dwg_DYNAPI_field dwg_dynapi_common_object_field(string fieldname) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_dynapi_common_object_field(fieldname);
    Dwg_DYNAPI_field ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_DYNAPI_field(cPtr, false);
    return ret;
  }

  public static Dwg_DYNAPI_field dwg_dynapi_entity_fields(string name) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_dynapi_entity_fields(name);
    Dwg_DYNAPI_field ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_DYNAPI_field(cPtr, false);
    return ret;
  }

  public static Dwg_DYNAPI_field dwg_dynapi_common_entity_fields() {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_dynapi_common_entity_fields();
    Dwg_DYNAPI_field ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_DYNAPI_field(cPtr, false);
    return ret;
  }

  public static Dwg_DYNAPI_field dwg_dynapi_common_object_fields() {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_dynapi_common_object_fields();
    Dwg_DYNAPI_field ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_DYNAPI_field(cPtr, false);
    return ret;
  }

  public static Dwg_DYNAPI_field dwg_dynapi_subclass_fields(string name) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_dynapi_subclass_fields(name);
    Dwg_DYNAPI_field ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_DYNAPI_field(cPtr, false);
    return ret;
  }

  public static int dwg_dynapi_fields_size(string name) {
    int ret = LibreDWGPINVOKE.dwg_dynapi_fields_size(name);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_ref dwg_object_tablectrl_get_entries(Dwg_Object obj, SWIGTYPE_p_int error) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_tablectrl_get_entries(Dwg_Object.getCPtr(obj), SWIGTYPE_p_int.getCPtr(error));
    SWIGTYPE_p_p__dwg_object_ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_ref(cPtr, false);
    return ret;
  }

  public static string dwg_ref_get_table_name(Dwg_Object_Ref ref_, SWIGTYPE_p_int error) {
    string ret = LibreDWGPINVOKE.dwg_ref_get_table_name(Dwg_Object_Ref.getCPtr(ref_), SWIGTYPE_p_int.getCPtr(error));
    return ret;
  }

  public static string dwg_ent_get_layer_name(SWIGTYPE_p_dwg_obj_ent ent, SWIGTYPE_p_int error) {
    string ret = LibreDWGPINVOKE.dwg_ent_get_layer_name(SWIGTYPE_p_dwg_obj_ent.getCPtr(ent), SWIGTYPE_p_int.getCPtr(error));
    return ret;
  }

  public static string dwg_obj_layer_get_name(SWIGTYPE_p_dwg_obj_layer layer, SWIGTYPE_p_int error) {
    string ret = LibreDWGPINVOKE.dwg_obj_layer_get_name(SWIGTYPE_p_dwg_obj_layer.getCPtr(layer), SWIGTYPE_p_int.getCPtr(error));
    return ret;
  }

  public static string dwg_obj_table_get_name(Dwg_Object obj, SWIGTYPE_p_int error) {
    string ret = LibreDWGPINVOKE.dwg_obj_table_get_name(Dwg_Object.getCPtr(obj), SWIGTYPE_p_int.getCPtr(error));
    return ret;
  }

  public static Dwg_Object dwg_ent_to_object(SWIGTYPE_p_dwg_obj_ent obj, SWIGTYPE_p_int error) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_ent_to_object(SWIGTYPE_p_dwg_obj_ent.getCPtr(obj), SWIGTYPE_p_int.getCPtr(error));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object_Object dwg_object_to_object(Dwg_Object obj, SWIGTYPE_p_int error) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_object(Dwg_Object.getCPtr(obj), SWIGTYPE_p_int.getCPtr(error));
    Dwg_Object_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object dwg_obj_obj_to_object(Dwg_Object_Object obj, SWIGTYPE_p_int error) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_obj_obj_to_object(Dwg_Object_Object.getCPtr(obj), SWIGTYPE_p_int.getCPtr(error));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object_Entity dwg_object_to_entity(Dwg_Object obj, SWIGTYPE_p_int error) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_entity(Dwg_Object.getCPtr(obj), SWIGTYPE_p_int.getCPtr(error));
    Dwg_Object_Entity ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Entity(cPtr, false);
    return ret;
  }

  public static int dwg_object_get_type(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_object_get_type(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static int dwg_object_get_fixedtype(Dwg_Object obj) {
    int ret = LibreDWGPINVOKE.dwg_object_get_fixedtype(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static string dwg_object_get_dxfname(Dwg_Object obj) {
    string ret = LibreDWGPINVOKE.dwg_object_get_dxfname(Dwg_Object.getCPtr(obj));
    return ret;
  }

  public static uint dwg_ref_get_absref(Dwg_Object_Ref ref_, SWIGTYPE_p_int error) {
    uint ret = LibreDWGPINVOKE.dwg_ref_get_absref(Dwg_Object_Ref.getCPtr(ref_), SWIGTYPE_p_int.getCPtr(error));
    return ret;
  }

  public static Dwg_Object dwg_ref_get_object(Dwg_Object_Ref ref_, SWIGTYPE_p_int error) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_ref_get_object(Dwg_Object_Ref.getCPtr(ref_), SWIGTYPE_p_int.getCPtr(error));
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static Dwg_Object dwg_absref_get_object(Dwg_Data dwg, uint absref) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_absref_get_object(Dwg_Data.getCPtr(dwg), absref);
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static uint dwg_get_num_classes(Dwg_Data dwg) {
    uint ret = LibreDWGPINVOKE.dwg_get_num_classes(Dwg_Data.getCPtr(dwg));
    return ret;
  }

  public static Dwg_Class dwg_get_class(Dwg_Data dwg, uint index) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_get_class(Dwg_Data.getCPtr(dwg), index);
    Dwg_Class ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Class(cPtr, false);
    return ret;
  }

  public static Dwg_Object dwg_get_object(Dwg_Data dwg, uint index) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_get_object(Dwg_Data.getCPtr(dwg), index);
    Dwg_Object ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_dwg_object dwg_obj_generic_to_object(SWIGTYPE_p_dwg_obj_generic obj, SWIGTYPE_p_int error) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_obj_generic_to_object(SWIGTYPE_p_dwg_obj_generic.getCPtr(obj), SWIGTYPE_p_int.getCPtr(error));
    SWIGTYPE_p_dwg_object ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_dwg_object(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_dwg_obj_obj dwg_obj_generic_parent(SWIGTYPE_p_dwg_obj_generic obj, SWIGTYPE_p_int error) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_obj_generic_parent(SWIGTYPE_p_dwg_obj_generic.getCPtr(obj), SWIGTYPE_p_int.getCPtr(error));
    SWIGTYPE_p_dwg_obj_obj ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_dwg_obj_obj(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_dwg_entity_DIMENSION_common dwg_object_to_DIMENSION(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DIMENSION(Dwg_Object.getCPtr(obj));
    SWIGTYPE_p_dwg_entity_DIMENSION_common ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_dwg_entity_DIMENSION_common(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_TEXT dwg_getall_TEXT(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_TEXT(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_TEXT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_TEXT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_ATTRIB dwg_getall_ATTRIB(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_ATTRIB(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_ATTRIB ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_ATTRIB(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_ATTDEF dwg_getall_ATTDEF(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_ATTDEF(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_ATTDEF ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_ATTDEF(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_BLOCK dwg_getall_BLOCK(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_BLOCK(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_BLOCK ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_BLOCK(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_ENDBLK dwg_getall_ENDBLK(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_ENDBLK(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_ENDBLK ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_ENDBLK(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_SEQEND dwg_getall_SEQEND(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_SEQEND(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_SEQEND ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_SEQEND(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_INSERT dwg_getall_INSERT(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_INSERT(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_INSERT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_INSERT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_MINSERT dwg_getall_MINSERT(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_MINSERT(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_MINSERT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_MINSERT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_VERTEX_2D dwg_getall_VERTEX_2D(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VERTEX_2D(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_VERTEX_2D ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_VERTEX_2D(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_VERTEX_3D dwg_getall_VERTEX_3D(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VERTEX_3D(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_VERTEX_3D ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_VERTEX_3D(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_VERTEX_3D dwg_getall_VERTEX_MESH(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VERTEX_MESH(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_VERTEX_3D ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_VERTEX_3D(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_VERTEX_3D dwg_getall_VERTEX_PFACE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VERTEX_PFACE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_VERTEX_3D ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_VERTEX_3D(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_VERTEX_PFACE_FACE dwg_getall_VERTEX_PFACE_FACE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VERTEX_PFACE_FACE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_VERTEX_PFACE_FACE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_VERTEX_PFACE_FACE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_POLYLINE_2D dwg_getall_POLYLINE_2D(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_POLYLINE_2D(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_POLYLINE_2D ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_POLYLINE_2D(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_POLYLINE_3D dwg_getall_POLYLINE_3D(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_POLYLINE_3D(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_POLYLINE_3D ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_POLYLINE_3D(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_ARC dwg_getall_ARC(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_ARC(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_ARC ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_ARC(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_CIRCLE dwg_getall_CIRCLE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_CIRCLE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_CIRCLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_CIRCLE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_LINE dwg_getall_LINE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_LINE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_LINE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_LINE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_DIMENSION_ORDINATE dwg_getall_DIMENSION_ORDINATE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DIMENSION_ORDINATE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_DIMENSION_ORDINATE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_DIMENSION_ORDINATE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_DIMENSION_LINEAR dwg_getall_DIMENSION_LINEAR(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DIMENSION_LINEAR(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_DIMENSION_LINEAR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_DIMENSION_LINEAR(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_DIMENSION_ALIGNED dwg_getall_DIMENSION_ALIGNED(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DIMENSION_ALIGNED(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_DIMENSION_ALIGNED ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_DIMENSION_ALIGNED(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_DIMENSION_ANG3PT dwg_getall_DIMENSION_ANG3PT(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DIMENSION_ANG3PT(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_DIMENSION_ANG3PT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_DIMENSION_ANG3PT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_DIMENSION_ANG2LN dwg_getall_DIMENSION_ANG2LN(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DIMENSION_ANG2LN(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_DIMENSION_ANG2LN ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_DIMENSION_ANG2LN(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_DIMENSION_RADIUS dwg_getall_DIMENSION_RADIUS(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DIMENSION_RADIUS(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_DIMENSION_RADIUS ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_DIMENSION_RADIUS(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_DIMENSION_DIAMETER dwg_getall_DIMENSION_DIAMETER(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DIMENSION_DIAMETER(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_DIMENSION_DIAMETER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_DIMENSION_DIAMETER(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_POINT dwg_getall_POINT(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_POINT(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_POINT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_POINT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_POLYLINE_PFACE dwg_getall_POLYLINE_PFACE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_POLYLINE_PFACE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_POLYLINE_PFACE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_POLYLINE_PFACE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_POLYLINE_MESH dwg_getall_POLYLINE_MESH(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_POLYLINE_MESH(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_POLYLINE_MESH ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_POLYLINE_MESH(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_SOLID dwg_getall_SOLID(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_SOLID(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_SOLID ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_SOLID(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_TRACE dwg_getall_TRACE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_TRACE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_TRACE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_TRACE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_SHAPE dwg_getall_SHAPE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_SHAPE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_SHAPE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_SHAPE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_VIEWPORT dwg_getall_VIEWPORT(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VIEWPORT(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_VIEWPORT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_VIEWPORT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_ELLIPSE dwg_getall_ELLIPSE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_ELLIPSE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_ELLIPSE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_ELLIPSE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_SPLINE dwg_getall_SPLINE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_SPLINE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_SPLINE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_SPLINE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_3DSOLID dwg_getall_REGION(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_REGION(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_3DSOLID ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_3DSOLID(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_3DSOLID dwg_getall_BODY(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_BODY(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_3DSOLID ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_3DSOLID(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_RAY dwg_getall_RAY(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_RAY(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_RAY ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_RAY(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_RAY dwg_getall_XLINE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_XLINE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_RAY ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_RAY(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_OLEFRAME dwg_getall_OLEFRAME(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_OLEFRAME(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_OLEFRAME ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_OLEFRAME(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_MTEXT dwg_getall_MTEXT(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_MTEXT(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_MTEXT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_MTEXT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_LEADER dwg_getall_LEADER(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_LEADER(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_LEADER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_LEADER(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_TOLERANCE dwg_getall_TOLERANCE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_TOLERANCE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_TOLERANCE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_TOLERANCE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_MLINE dwg_getall_MLINE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_MLINE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_MLINE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_MLINE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_OLE2FRAME dwg_getall_OLE2FRAME(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_OLE2FRAME(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_OLE2FRAME ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_OLE2FRAME(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_LWPOLYLINE dwg_getall_LWPOLYLINE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_LWPOLYLINE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_LWPOLYLINE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_LWPOLYLINE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_HATCH dwg_getall_HATCH(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_HATCH(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_HATCH ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_HATCH(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_PROXY_ENTITY dwg_getall_PROXY_ENTITY(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_PROXY_ENTITY(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_PROXY_ENTITY ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_PROXY_ENTITY(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_UNKNOWN_ENT dwg_getall_UNKNOWN_ENT(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_UNKNOWN_ENT(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_UNKNOWN_ENT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_UNKNOWN_ENT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_CAMERA dwg_getall_CAMERA(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_CAMERA(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_CAMERA ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_CAMERA(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_HELIX dwg_getall_HELIX(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_HELIX(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_HELIX ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_HELIX(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_IMAGE dwg_getall_IMAGE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_IMAGE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_IMAGE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_IMAGE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_LIGHT dwg_getall_LIGHT(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_LIGHT(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_LIGHT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_LIGHT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_MULTILEADER dwg_getall_MULTILEADER(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_MULTILEADER(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_MULTILEADER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_MULTILEADER(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_SECTIONOBJECT dwg_getall_SECTIONOBJECT(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_SECTIONOBJECT(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_SECTIONOBJECT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_SECTIONOBJECT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_UNDERLAY dwg_getall_UNDERLAY(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_UNDERLAY(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_UNDERLAY ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_UNDERLAY(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_WIPEOUT dwg_getall_WIPEOUT(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_WIPEOUT(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_WIPEOUT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_WIPEOUT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_ARC_DIMENSION dwg_getall_ARC_DIMENSION(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_ARC_DIMENSION(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_ARC_DIMENSION ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_ARC_DIMENSION(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_EXTRUDEDSURFACE dwg_getall_EXTRUDEDSURFACE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_EXTRUDEDSURFACE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_EXTRUDEDSURFACE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_EXTRUDEDSURFACE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_GEOPOSITIONMARKER dwg_getall_GEOPOSITIONMARKER(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_GEOPOSITIONMARKER(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_GEOPOSITIONMARKER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_GEOPOSITIONMARKER(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_LOFTEDSURFACE dwg_getall_LOFTEDSURFACE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_LOFTEDSURFACE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_LOFTEDSURFACE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_LOFTEDSURFACE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_MESH dwg_getall_MESH(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_MESH(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_MESH ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_MESH(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_NAVISWORKSMODEL dwg_getall_NAVISWORKSMODEL(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_NAVISWORKSMODEL(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_NAVISWORKSMODEL ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_NAVISWORKSMODEL(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_PLANESURFACE dwg_getall_PLANESURFACE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_PLANESURFACE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_PLANESURFACE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_PLANESURFACE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_REVOLVEDSURFACE dwg_getall_REVOLVEDSURFACE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_REVOLVEDSURFACE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_REVOLVEDSURFACE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_REVOLVEDSURFACE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_SWEPTSURFACE dwg_getall_SWEPTSURFACE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_SWEPTSURFACE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_SWEPTSURFACE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_SWEPTSURFACE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_entity_TABLE dwg_getall_TABLE(Dwg_Object_Ref hdr) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_TABLE(Dwg_Object_Ref.getCPtr(hdr));
    SWIGTYPE_p_p__dwg_entity_TABLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_entity_TABLE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_BLOCK_CONTROL dwg_getall_BLOCK_CONTROL(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_BLOCK_CONTROL(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_BLOCK_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_BLOCK_CONTROL(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_BLOCK_HEADER dwg_getall_BLOCK_HEADER(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_BLOCK_HEADER(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_BLOCK_HEADER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_BLOCK_HEADER(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_LAYER_CONTROL dwg_getall_LAYER_CONTROL(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_LAYER_CONTROL(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_LAYER_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_LAYER_CONTROL(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_LAYER dwg_getall_LAYER(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_LAYER(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_LAYER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_LAYER(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_STYLE_CONTROL dwg_getall_STYLE_CONTROL(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_STYLE_CONTROL(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_STYLE_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_STYLE_CONTROL(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_STYLE dwg_getall_STYLE(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_STYLE(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_STYLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_STYLE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_LTYPE_CONTROL dwg_getall_LTYPE_CONTROL(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_LTYPE_CONTROL(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_LTYPE_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_LTYPE_CONTROL(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_LTYPE dwg_getall_LTYPE(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_LTYPE(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_LTYPE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_LTYPE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_VIEW_CONTROL dwg_getall_VIEW_CONTROL(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VIEW_CONTROL(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_VIEW_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_VIEW_CONTROL(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_VIEW dwg_getall_VIEW(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VIEW(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_VIEW ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_VIEW(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_UCS_CONTROL dwg_getall_UCS_CONTROL(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_UCS_CONTROL(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_UCS_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_UCS_CONTROL(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_UCS dwg_getall_UCS(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_UCS(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_UCS ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_UCS(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_VPORT_CONTROL dwg_getall_VPORT_CONTROL(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VPORT_CONTROL(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_VPORT_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_VPORT_CONTROL(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_VPORT dwg_getall_VPORT(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VPORT(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_VPORT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_VPORT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_APPID_CONTROL dwg_getall_APPID_CONTROL(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_APPID_CONTROL(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_APPID_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_APPID_CONTROL(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_APPID dwg_getall_APPID(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_APPID(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_APPID ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_APPID(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_DIMSTYLE_CONTROL dwg_getall_DIMSTYLE_CONTROL(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DIMSTYLE_CONTROL(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_DIMSTYLE_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_DIMSTYLE_CONTROL(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_DIMSTYLE dwg_getall_DIMSTYLE(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DIMSTYLE(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_DIMSTYLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_DIMSTYLE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_VPORT_ENTITY_CONTROL dwg_getall_VPORT_ENTITY_CONTROL(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VPORT_ENTITY_CONTROL(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_VPORT_ENTITY_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_VPORT_ENTITY_CONTROL(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_VPORT_ENTITY_HEADER dwg_getall_VPORT_ENTITY_HEADER(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VPORT_ENTITY_HEADER(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_VPORT_ENTITY_HEADER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_VPORT_ENTITY_HEADER(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_DICTIONARY dwg_getall_DICTIONARY(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DICTIONARY(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_DICTIONARY ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_DICTIONARY(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_MLINESTYLE dwg_getall_MLINESTYLE(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_MLINESTYLE(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_MLINESTYLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_MLINESTYLE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_UNKNOWN_OBJ dwg_getall_UNKNOWN_OBJ(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_UNKNOWN_OBJ(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_UNKNOWN_OBJ ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_UNKNOWN_OBJ(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_DICTIONARYVAR dwg_getall_DICTIONARYVAR(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DICTIONARYVAR(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_DICTIONARYVAR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_DICTIONARYVAR(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_DICTIONARYWDFLT dwg_getall_DICTIONARYWDFLT(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DICTIONARYWDFLT(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_DICTIONARYWDFLT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_DICTIONARYWDFLT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_FIELD dwg_getall_FIELD(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_FIELD(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_FIELD ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_FIELD(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_DUMMY dwg_getall_DUMMY(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DUMMY(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_DUMMY ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_DUMMY(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_FIELDLIST dwg_getall_FIELDLIST(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_FIELDLIST(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_FIELDLIST ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_FIELDLIST(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_GROUP dwg_getall_GROUP(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_GROUP(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_GROUP ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_GROUP(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_IDBUFFER dwg_getall_IDBUFFER(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_IDBUFFER(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_IDBUFFER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_IDBUFFER(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_IMAGEDEF dwg_getall_IMAGEDEF(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_IMAGEDEF(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_IMAGEDEF ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_IMAGEDEF(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_IMAGEDEF_REACTOR dwg_getall_IMAGEDEF_REACTOR(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_IMAGEDEF_REACTOR(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_IMAGEDEF_REACTOR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_IMAGEDEF_REACTOR(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_LAYER_INDEX dwg_getall_LAYER_INDEX(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_LAYER_INDEX(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_LAYER_INDEX ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_LAYER_INDEX(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_LAYOUT dwg_getall_LAYOUT(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_LAYOUT(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_LAYOUT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_LAYOUT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_MLEADERSTYLE dwg_getall_MLEADERSTYLE(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_MLEADERSTYLE(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_MLEADERSTYLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_MLEADERSTYLE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_PLACEHOLDER dwg_getall_PLACEHOLDER(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_PLACEHOLDER(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_PLACEHOLDER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_PLACEHOLDER(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_PROXY_OBJECT dwg_getall_PROXY_OBJECT(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_PROXY_OBJECT(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_PROXY_OBJECT ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_PROXY_OBJECT(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_RASTERVARIABLES dwg_getall_RASTERVARIABLES(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_RASTERVARIABLES(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_RASTERVARIABLES ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_RASTERVARIABLES(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_SCALE dwg_getall_SCALE(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_SCALE(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_SCALE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_SCALE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_SORTENTSTABLE dwg_getall_SORTENTSTABLE(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_SORTENTSTABLE(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_SORTENTSTABLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_SORTENTSTABLE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_SPATIAL_FILTER dwg_getall_SPATIAL_FILTER(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_SPATIAL_FILTER(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_SPATIAL_FILTER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_SPATIAL_FILTER(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_SPATIAL_INDEX dwg_getall_SPATIAL_INDEX(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_SPATIAL_INDEX(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_SPATIAL_INDEX ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_SPATIAL_INDEX(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_WIPEOUTVARIABLES dwg_getall_WIPEOUTVARIABLES(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_WIPEOUTVARIABLES(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_WIPEOUTVARIABLES ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_WIPEOUTVARIABLES(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_XRECORD dwg_getall_XRECORD(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_XRECORD(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_XRECORD ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_XRECORD(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_ASSOCALIGNEDDIMACTIONBODY dwg_getall_ASSOCALIGNEDDIMACTIONBODY(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_ASSOCALIGNEDDIMACTIONBODY(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_ASSOCALIGNEDDIMACTIONBODY ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_ASSOCALIGNEDDIMACTIONBODY(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_ASSOCDEPENDENCY dwg_getall_ASSOCDEPENDENCY(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_ASSOCDEPENDENCY(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_ASSOCDEPENDENCY ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_ASSOCDEPENDENCY(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_ASSOCPLANESURFACEACTIONBODY dwg_getall_ASSOCPLANESURFACEACTIONBODY(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_ASSOCPLANESURFACEACTIONBODY(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_ASSOCPLANESURFACEACTIONBODY ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_ASSOCPLANESURFACEACTIONBODY(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_DBCOLOR dwg_getall_DBCOLOR(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DBCOLOR(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_DBCOLOR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_DBCOLOR(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_DIMASSOC dwg_getall_DIMASSOC(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DIMASSOC(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_DIMASSOC ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_DIMASSOC(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_DYNAMICBLOCKPURGEPREVENTER dwg_getall_DYNAMICBLOCKPURGEPREVENTER(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_DYNAMICBLOCKPURGEPREVENTER(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_DYNAMICBLOCKPURGEPREVENTER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_DYNAMICBLOCKPURGEPREVENTER(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_GEODATA dwg_getall_GEODATA(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_GEODATA(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_GEODATA ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_GEODATA(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_LONG_TRANSACTION dwg_getall_LONG_TRANSACTION(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_LONG_TRANSACTION(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_LONG_TRANSACTION ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_LONG_TRANSACTION(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_OBJECT_PTR dwg_getall_OBJECT_PTR(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_OBJECT_PTR(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_OBJECT_PTR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_OBJECT_PTR(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_PERSUBENTMGR dwg_getall_PERSUBENTMGR(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_PERSUBENTMGR(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_PERSUBENTMGR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_PERSUBENTMGR(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_SECTION_MANAGER dwg_getall_SECTION_MANAGER(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_SECTION_MANAGER(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_SECTION_MANAGER ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_SECTION_MANAGER(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_TABLEGEOMETRY dwg_getall_TABLEGEOMETRY(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_TABLEGEOMETRY(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_TABLEGEOMETRY ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_TABLEGEOMETRY(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_TABLESTYLE dwg_getall_TABLESTYLE(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_TABLESTYLE(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_TABLESTYLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_TABLESTYLE(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_UNDERLAYDEFINITION dwg_getall_UNDERLAYDEFINITION(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_UNDERLAYDEFINITION(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_UNDERLAYDEFINITION ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_UNDERLAYDEFINITION(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p__dwg_object_VISUALSTYLE dwg_getall_VISUALSTYLE(Dwg_Data dwg) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_getall_VISUALSTYLE(Dwg_Data.getCPtr(dwg));
    SWIGTYPE_p_p__dwg_object_VISUALSTYLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p__dwg_object_VISUALSTYLE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_TEXT dwg_object_to_TEXT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_TEXT(Dwg_Object.getCPtr(obj));
    Dwg_Entity_TEXT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_TEXT(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_ATTRIB dwg_object_to_ATTRIB(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_ATTRIB(Dwg_Object.getCPtr(obj));
    Dwg_Entity_ATTRIB ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_ATTRIB(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_ATTDEF dwg_object_to_ATTDEF(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_ATTDEF(Dwg_Object.getCPtr(obj));
    Dwg_Entity_ATTDEF ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_ATTDEF(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_BLOCK dwg_object_to_BLOCK(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_BLOCK(Dwg_Object.getCPtr(obj));
    Dwg_Entity_BLOCK ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_BLOCK(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_ENDBLK dwg_object_to_ENDBLK(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_ENDBLK(Dwg_Object.getCPtr(obj));
    Dwg_Entity_ENDBLK ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_ENDBLK(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_SEQEND dwg_object_to_SEQEND(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_SEQEND(Dwg_Object.getCPtr(obj));
    Dwg_Entity_SEQEND ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_SEQEND(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_INSERT dwg_object_to_INSERT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_INSERT(Dwg_Object.getCPtr(obj));
    Dwg_Entity_INSERT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_INSERT(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_MINSERT dwg_object_to_MINSERT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_MINSERT(Dwg_Object.getCPtr(obj));
    Dwg_Entity_MINSERT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_MINSERT(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_VERTEX_2D dwg_object_to_VERTEX_2D(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VERTEX_2D(Dwg_Object.getCPtr(obj));
    Dwg_Entity_VERTEX_2D ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_VERTEX_2D(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_VERTEX_3D dwg_object_to_VERTEX_3D(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VERTEX_3D(Dwg_Object.getCPtr(obj));
    Dwg_Entity_VERTEX_3D ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_VERTEX_3D(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_VERTEX_3D dwg_object_to_VERTEX_MESH(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VERTEX_MESH(Dwg_Object.getCPtr(obj));
    Dwg_Entity_VERTEX_3D ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_VERTEX_3D(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_VERTEX_3D dwg_object_to_VERTEX_PFACE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VERTEX_PFACE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_VERTEX_3D ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_VERTEX_3D(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_VERTEX_PFACE_FACE dwg_object_to_VERTEX_PFACE_FACE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VERTEX_PFACE_FACE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_VERTEX_PFACE_FACE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_VERTEX_PFACE_FACE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_POLYLINE_2D dwg_object_to_POLYLINE_2D(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_POLYLINE_2D(Dwg_Object.getCPtr(obj));
    Dwg_Entity_POLYLINE_2D ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_POLYLINE_2D(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_POLYLINE_3D dwg_object_to_POLYLINE_3D(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_POLYLINE_3D(Dwg_Object.getCPtr(obj));
    Dwg_Entity_POLYLINE_3D ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_POLYLINE_3D(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_ARC dwg_object_to_ARC(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_ARC(Dwg_Object.getCPtr(obj));
    Dwg_Entity_ARC ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_ARC(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_CIRCLE dwg_object_to_CIRCLE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_CIRCLE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_CIRCLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_CIRCLE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_LINE dwg_object_to_LINE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_LINE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_LINE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_LINE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_DIMENSION_ORDINATE dwg_object_to_DIMENSION_ORDINATE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DIMENSION_ORDINATE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_DIMENSION_ORDINATE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_DIMENSION_ORDINATE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_DIMENSION_LINEAR dwg_object_to_DIMENSION_LINEAR(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DIMENSION_LINEAR(Dwg_Object.getCPtr(obj));
    Dwg_Entity_DIMENSION_LINEAR ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_DIMENSION_LINEAR(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_DIMENSION_ALIGNED dwg_object_to_DIMENSION_ALIGNED(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DIMENSION_ALIGNED(Dwg_Object.getCPtr(obj));
    Dwg_Entity_DIMENSION_ALIGNED ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_DIMENSION_ALIGNED(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_DIMENSION_ANG3PT dwg_object_to_DIMENSION_ANG3PT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DIMENSION_ANG3PT(Dwg_Object.getCPtr(obj));
    Dwg_Entity_DIMENSION_ANG3PT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_DIMENSION_ANG3PT(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_DIMENSION_ANG2LN dwg_object_to_DIMENSION_ANG2LN(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DIMENSION_ANG2LN(Dwg_Object.getCPtr(obj));
    Dwg_Entity_DIMENSION_ANG2LN ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_DIMENSION_ANG2LN(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_DIMENSION_RADIUS dwg_object_to_DIMENSION_RADIUS(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DIMENSION_RADIUS(Dwg_Object.getCPtr(obj));
    Dwg_Entity_DIMENSION_RADIUS ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_DIMENSION_RADIUS(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_DIMENSION_DIAMETER dwg_object_to_DIMENSION_DIAMETER(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DIMENSION_DIAMETER(Dwg_Object.getCPtr(obj));
    Dwg_Entity_DIMENSION_DIAMETER ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_DIMENSION_DIAMETER(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_POINT dwg_object_to_POINT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_POINT(Dwg_Object.getCPtr(obj));
    Dwg_Entity_POINT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_POINT(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_POLYLINE_PFACE dwg_object_to_POLYLINE_PFACE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_POLYLINE_PFACE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_POLYLINE_PFACE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_POLYLINE_PFACE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_POLYLINE_MESH dwg_object_to_POLYLINE_MESH(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_POLYLINE_MESH(Dwg_Object.getCPtr(obj));
    Dwg_Entity_POLYLINE_MESH ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_POLYLINE_MESH(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_SOLID dwg_object_to_SOLID(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_SOLID(Dwg_Object.getCPtr(obj));
    Dwg_Entity_SOLID ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_SOLID(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_TRACE dwg_object_to_TRACE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_TRACE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_TRACE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_TRACE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_SHAPE dwg_object_to_SHAPE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_SHAPE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_SHAPE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_SHAPE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_VIEWPORT dwg_object_to_VIEWPORT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VIEWPORT(Dwg_Object.getCPtr(obj));
    Dwg_Entity_VIEWPORT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_VIEWPORT(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_ELLIPSE dwg_object_to_ELLIPSE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_ELLIPSE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_ELLIPSE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_ELLIPSE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_SPLINE dwg_object_to_SPLINE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_SPLINE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_SPLINE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_SPLINE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity__3DSOLID dwg_object_to_REGION(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_REGION(Dwg_Object.getCPtr(obj));
    Dwg_Entity__3DSOLID ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity__3DSOLID(cPtr, false);
    return ret;
  }

  public static Dwg_Entity__3DSOLID dwg_object_to_BODY(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_BODY(Dwg_Object.getCPtr(obj));
    Dwg_Entity__3DSOLID ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity__3DSOLID(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_RAY dwg_object_to_RAY(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_RAY(Dwg_Object.getCPtr(obj));
    Dwg_Entity_RAY ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_RAY(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_RAY dwg_object_to_XLINE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_XLINE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_RAY ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_RAY(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_OLEFRAME dwg_object_to_OLEFRAME(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_OLEFRAME(Dwg_Object.getCPtr(obj));
    Dwg_Entity_OLEFRAME ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_OLEFRAME(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_MTEXT dwg_object_to_MTEXT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_MTEXT(Dwg_Object.getCPtr(obj));
    Dwg_Entity_MTEXT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_MTEXT(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_LEADER dwg_object_to_LEADER(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_LEADER(Dwg_Object.getCPtr(obj));
    Dwg_Entity_LEADER ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_LEADER(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_TOLERANCE dwg_object_to_TOLERANCE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_TOLERANCE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_TOLERANCE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_TOLERANCE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_MLINE dwg_object_to_MLINE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_MLINE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_MLINE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_MLINE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_OLE2FRAME dwg_object_to_OLE2FRAME(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_OLE2FRAME(Dwg_Object.getCPtr(obj));
    Dwg_Entity_OLE2FRAME ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_OLE2FRAME(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_PROXY_ENTITY dwg_object_to_PROXY_ENTITY(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_PROXY_ENTITY(Dwg_Object.getCPtr(obj));
    Dwg_Entity_PROXY_ENTITY ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_PROXY_ENTITY(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_HATCH dwg_object_to_HATCH(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_HATCH(Dwg_Object.getCPtr(obj));
    Dwg_Entity_HATCH ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_HATCH(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_UNKNOWN_ENT dwg_object_to_UNKNOWN_ENT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_UNKNOWN_ENT(Dwg_Object.getCPtr(obj));
    Dwg_Entity_UNKNOWN_ENT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_UNKNOWN_ENT(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_CAMERA dwg_object_to_CAMERA(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_CAMERA(Dwg_Object.getCPtr(obj));
    Dwg_Entity_CAMERA ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_CAMERA(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_HELIX dwg_object_to_HELIX(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_HELIX(Dwg_Object.getCPtr(obj));
    Dwg_Entity_HELIX ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_HELIX(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_IMAGE dwg_object_to_IMAGE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_IMAGE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_IMAGE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_IMAGE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_LIGHT dwg_object_to_LIGHT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_LIGHT(Dwg_Object.getCPtr(obj));
    Dwg_Entity_LIGHT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_LIGHT(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_LWPOLYLINE dwg_object_to_LWPOLYLINE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_LWPOLYLINE(Dwg_Object.getCPtr(obj));
    Dwg_Entity_LWPOLYLINE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_LWPOLYLINE(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_MULTILEADER dwg_object_to_MULTILEADER(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_MULTILEADER(Dwg_Object.getCPtr(obj));
    Dwg_Entity_MULTILEADER ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_MULTILEADER(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_SECTIONOBJECT dwg_object_to_SECTIONOBJECT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_SECTIONOBJECT(Dwg_Object.getCPtr(obj));
    Dwg_Entity_SECTIONOBJECT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_SECTIONOBJECT(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_UNDERLAY dwg_object_to_UNDERLAY(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_UNDERLAY(Dwg_Object.getCPtr(obj));
    Dwg_Entity_UNDERLAY ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_UNDERLAY(cPtr, false);
    return ret;
  }

  public static Dwg_Entity_WIPEOUT dwg_object_to_WIPEOUT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_WIPEOUT(Dwg_Object.getCPtr(obj));
    Dwg_Entity_WIPEOUT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Entity_WIPEOUT(cPtr, false);
    return ret;
  }

  public static Dwg_Object_BLOCK_HEADER dwg_object_to_BLOCK_HEADER(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_BLOCK_HEADER(Dwg_Object.getCPtr(obj));
    Dwg_Object_BLOCK_HEADER ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_BLOCK_HEADER(cPtr, false);
    return ret;
  }

  public static Dwg_Object_BLOCK_CONTROL dwg_object_to_BLOCK_CONTROL(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_BLOCK_CONTROL(Dwg_Object.getCPtr(obj));
    Dwg_Object_BLOCK_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_BLOCK_CONTROL(cPtr, false);
    return ret;
  }

  public static Dwg_Object_LAYER dwg_object_to_LAYER(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_LAYER(Dwg_Object.getCPtr(obj));
    Dwg_Object_LAYER ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_LAYER(cPtr, false);
    return ret;
  }

  public static Dwg_Object_XRECORD dwg_object_to_XRECORD(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_XRECORD(Dwg_Object.getCPtr(obj));
    Dwg_Object_XRECORD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_XRECORD(cPtr, false);
    return ret;
  }

  public static Dwg_Object_STYLE_CONTROL dwg_object_to_STYLE_CONTROL(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_STYLE_CONTROL(Dwg_Object.getCPtr(obj));
    Dwg_Object_STYLE_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_STYLE_CONTROL(cPtr, false);
    return ret;
  }

  public static Dwg_Object_STYLE dwg_object_to_STYLE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_STYLE(Dwg_Object.getCPtr(obj));
    Dwg_Object_STYLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_STYLE(cPtr, false);
    return ret;
  }

  public static Dwg_Object_LTYPE_CONTROL dwg_object_to_LTYPE_CONTROL(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_LTYPE_CONTROL(Dwg_Object.getCPtr(obj));
    Dwg_Object_LTYPE_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_LTYPE_CONTROL(cPtr, false);
    return ret;
  }

  public static Dwg_Object_LTYPE dwg_object_to_LTYPE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_LTYPE(Dwg_Object.getCPtr(obj));
    Dwg_Object_LTYPE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_LTYPE(cPtr, false);
    return ret;
  }

  public static Dwg_Object_VIEW_CONTROL dwg_object_to_VIEW_CONTROL(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VIEW_CONTROL(Dwg_Object.getCPtr(obj));
    Dwg_Object_VIEW_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_VIEW_CONTROL(cPtr, false);
    return ret;
  }

  public static Dwg_Object_VIEW dwg_object_to_VIEW(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VIEW(Dwg_Object.getCPtr(obj));
    Dwg_Object_VIEW ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_VIEW(cPtr, false);
    return ret;
  }

  public static Dwg_Object_UCS_CONTROL dwg_object_to_UCS_CONTROL(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_UCS_CONTROL(Dwg_Object.getCPtr(obj));
    Dwg_Object_UCS_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_UCS_CONTROL(cPtr, false);
    return ret;
  }

  public static Dwg_Object_UCS dwg_object_to_UCS(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_UCS(Dwg_Object.getCPtr(obj));
    Dwg_Object_UCS ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_UCS(cPtr, false);
    return ret;
  }

  public static Dwg_Object_VPORT_CONTROL dwg_object_to_VPORT_CONTROL(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VPORT_CONTROL(Dwg_Object.getCPtr(obj));
    Dwg_Object_VPORT_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_VPORT_CONTROL(cPtr, false);
    return ret;
  }

  public static Dwg_Object_VPORT dwg_object_to_VPORT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VPORT(Dwg_Object.getCPtr(obj));
    Dwg_Object_VPORT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_VPORT(cPtr, false);
    return ret;
  }

  public static Dwg_Object_APPID_CONTROL dwg_object_to_APPID_CONTROL(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_APPID_CONTROL(Dwg_Object.getCPtr(obj));
    Dwg_Object_APPID_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_APPID_CONTROL(cPtr, false);
    return ret;
  }

  public static Dwg_Object_APPID dwg_object_to_APPID(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_APPID(Dwg_Object.getCPtr(obj));
    Dwg_Object_APPID ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_APPID(cPtr, false);
    return ret;
  }

  public static Dwg_Object_DIMSTYLE_CONTROL dwg_object_to_DIMSTYLE_CONTROL(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DIMSTYLE_CONTROL(Dwg_Object.getCPtr(obj));
    Dwg_Object_DIMSTYLE_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_DIMSTYLE_CONTROL(cPtr, false);
    return ret;
  }

  public static Dwg_Object_DIMSTYLE dwg_object_to_DIMSTYLE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DIMSTYLE(Dwg_Object.getCPtr(obj));
    Dwg_Object_DIMSTYLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_DIMSTYLE(cPtr, false);
    return ret;
  }

  public static Dwg_Object_VPORT_ENTITY_CONTROL dwg_object_to_VPORT_ENTITY_CONTROL(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VPORT_ENTITY_CONTROL(Dwg_Object.getCPtr(obj));
    Dwg_Object_VPORT_ENTITY_CONTROL ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_VPORT_ENTITY_CONTROL(cPtr, false);
    return ret;
  }

  public static Dwg_Object_VPORT_ENTITY_HEADER dwg_object_to_VPORT_ENTITY_HEADER(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VPORT_ENTITY_HEADER(Dwg_Object.getCPtr(obj));
    Dwg_Object_VPORT_ENTITY_HEADER ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_VPORT_ENTITY_HEADER(cPtr, false);
    return ret;
  }

  public static Dwg_Object_DICTIONARY dwg_object_to_DICTIONARY(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DICTIONARY(Dwg_Object.getCPtr(obj));
    Dwg_Object_DICTIONARY ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_DICTIONARY(cPtr, false);
    return ret;
  }

  public static Dwg_Object_MLINESTYLE dwg_object_to_MLINESTYLE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_MLINESTYLE(Dwg_Object.getCPtr(obj));
    Dwg_Object_MLINESTYLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_MLINESTYLE(cPtr, false);
    return ret;
  }

  public static Dwg_Object_PROXY_OBJECT dwg_object_to_PROXY_OBJECT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_PROXY_OBJECT(Dwg_Object.getCPtr(obj));
    Dwg_Object_PROXY_OBJECT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_PROXY_OBJECT(cPtr, false);
    return ret;
  }

  public static Dwg_Object_DICTIONARYVAR dwg_object_to_DICTIONARYVAR(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DICTIONARYVAR(Dwg_Object.getCPtr(obj));
    Dwg_Object_DICTIONARYVAR ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_DICTIONARYVAR(cPtr, false);
    return ret;
  }

  public static Dwg_Object_DICTIONARYWDFLT dwg_object_to_DICTIONARYWDFLT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DICTIONARYWDFLT(Dwg_Object.getCPtr(obj));
    Dwg_Object_DICTIONARYWDFLT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_DICTIONARYWDFLT(cPtr, false);
    return ret;
  }

  public static Dwg_Object_FIELD dwg_object_to_FIELD(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_FIELD(Dwg_Object.getCPtr(obj));
    Dwg_Object_FIELD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_FIELD(cPtr, false);
    return ret;
  }

  public static Dwg_Object_FIELDLIST dwg_object_to_FIELDLIST(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_FIELDLIST(Dwg_Object.getCPtr(obj));
    Dwg_Object_FIELDLIST ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_FIELDLIST(cPtr, false);
    return ret;
  }

  public static Dwg_Object_GROUP dwg_object_to_GROUP(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_GROUP(Dwg_Object.getCPtr(obj));
    Dwg_Object_GROUP ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_GROUP(cPtr, false);
    return ret;
  }

  public static Dwg_Object_IDBUFFER dwg_object_to_IDBUFFER(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_IDBUFFER(Dwg_Object.getCPtr(obj));
    Dwg_Object_IDBUFFER ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_IDBUFFER(cPtr, false);
    return ret;
  }

  public static Dwg_Object_IMAGEDEF dwg_object_to_IMAGEDEF(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_IMAGEDEF(Dwg_Object.getCPtr(obj));
    Dwg_Object_IMAGEDEF ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_IMAGEDEF(cPtr, false);
    return ret;
  }

  public static Dwg_Object_IMAGEDEF_REACTOR dwg_object_to_IMAGEDEF_REACTOR(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_IMAGEDEF_REACTOR(Dwg_Object.getCPtr(obj));
    Dwg_Object_IMAGEDEF_REACTOR ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_IMAGEDEF_REACTOR(cPtr, false);
    return ret;
  }

  public static Dwg_Object_LAYER_INDEX dwg_object_to_LAYER_INDEX(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_LAYER_INDEX(Dwg_Object.getCPtr(obj));
    Dwg_Object_LAYER_INDEX ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_LAYER_INDEX(cPtr, false);
    return ret;
  }

  public static Dwg_Object_LAYOUT dwg_object_to_LAYOUT(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_LAYOUT(Dwg_Object.getCPtr(obj));
    Dwg_Object_LAYOUT ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_LAYOUT(cPtr, false);
    return ret;
  }

  public static Dwg_Object_MLEADERSTYLE dwg_object_to_MLEADERSTYLE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_MLEADERSTYLE(Dwg_Object.getCPtr(obj));
    Dwg_Object_MLEADERSTYLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_MLEADERSTYLE(cPtr, false);
    return ret;
  }

  public static Dwg_Object_PLACEHOLDER dwg_object_to_PLACEHOLDER(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_PLACEHOLDER(Dwg_Object.getCPtr(obj));
    Dwg_Object_PLACEHOLDER ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_PLACEHOLDER(cPtr, false);
    return ret;
  }

  public static Dwg_Object_RASTERVARIABLES dwg_object_to_RASTERVARIABLES(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_RASTERVARIABLES(Dwg_Object.getCPtr(obj));
    Dwg_Object_RASTERVARIABLES ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_RASTERVARIABLES(cPtr, false);
    return ret;
  }

  public static Dwg_Object_SCALE dwg_object_to_SCALE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_SCALE(Dwg_Object.getCPtr(obj));
    Dwg_Object_SCALE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_SCALE(cPtr, false);
    return ret;
  }

  public static Dwg_Object_SORTENTSTABLE dwg_object_to_SORTENTSTABLE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_SORTENTSTABLE(Dwg_Object.getCPtr(obj));
    Dwg_Object_SORTENTSTABLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_SORTENTSTABLE(cPtr, false);
    return ret;
  }

  public static Dwg_Object_SPATIAL_FILTER dwg_object_to_SPATIAL_FILTER(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_SPATIAL_FILTER(Dwg_Object.getCPtr(obj));
    Dwg_Object_SPATIAL_FILTER ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_SPATIAL_FILTER(cPtr, false);
    return ret;
  }

  public static Dwg_Object_SPATIAL_INDEX dwg_object_to_SPATIAL_INDEX(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_SPATIAL_INDEX(Dwg_Object.getCPtr(obj));
    Dwg_Object_SPATIAL_INDEX ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_SPATIAL_INDEX(cPtr, false);
    return ret;
  }

  public static Dwg_Object_WIPEOUTVARIABLES dwg_object_to_WIPEOUTVARIABLES(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_WIPEOUTVARIABLES(Dwg_Object.getCPtr(obj));
    Dwg_Object_WIPEOUTVARIABLES ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_WIPEOUTVARIABLES(cPtr, false);
    return ret;
  }

  public static Dwg_Object_ASSOCALIGNEDDIMACTIONBODY dwg_object_to_ASSOCALIGNEDDIMACTIONBODY(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_ASSOCALIGNEDDIMACTIONBODY(Dwg_Object.getCPtr(obj));
    Dwg_Object_ASSOCALIGNEDDIMACTIONBODY ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_ASSOCALIGNEDDIMACTIONBODY(cPtr, false);
    return ret;
  }

  public static Dwg_Object_ASSOCDEPENDENCY dwg_object_to_ASSOCDEPENDENCY(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_ASSOCDEPENDENCY(Dwg_Object.getCPtr(obj));
    Dwg_Object_ASSOCDEPENDENCY ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_ASSOCDEPENDENCY(cPtr, false);
    return ret;
  }

  public static Dwg_Object_ASSOCPLANESURFACEACTIONBODY dwg_object_to_ASSOCPLANESURFACEACTIONBODY(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_ASSOCPLANESURFACEACTIONBODY(Dwg_Object.getCPtr(obj));
    Dwg_Object_ASSOCPLANESURFACEACTIONBODY ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_ASSOCPLANESURFACEACTIONBODY(cPtr, false);
    return ret;
  }

  public static Dwg_Object_DBCOLOR dwg_object_to_DBCOLOR(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DBCOLOR(Dwg_Object.getCPtr(obj));
    Dwg_Object_DBCOLOR ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_DBCOLOR(cPtr, false);
    return ret;
  }

  public static Dwg_Object_DIMASSOC dwg_object_to_DIMASSOC(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DIMASSOC(Dwg_Object.getCPtr(obj));
    Dwg_Object_DIMASSOC ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_DIMASSOC(cPtr, false);
    return ret;
  }

  public static Dwg_Object_DUMMY dwg_object_to_DUMMY(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DUMMY(Dwg_Object.getCPtr(obj));
    Dwg_Object_DUMMY ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_DUMMY(cPtr, false);
    return ret;
  }

  public static Dwg_Object_DYNAMICBLOCKPURGEPREVENTER dwg_object_to_DYNAMICBLOCKPURGEPREVENTER(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_DYNAMICBLOCKPURGEPREVENTER(Dwg_Object.getCPtr(obj));
    Dwg_Object_DYNAMICBLOCKPURGEPREVENTER ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_DYNAMICBLOCKPURGEPREVENTER(cPtr, false);
    return ret;
  }

  public static Dwg_Object_GEODATA dwg_object_to_GEODATA(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_GEODATA(Dwg_Object.getCPtr(obj));
    Dwg_Object_GEODATA ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_GEODATA(cPtr, false);
    return ret;
  }

  public static Dwg_Object_LONG_TRANSACTION dwg_object_to_LONG_TRANSACTION(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_LONG_TRANSACTION(Dwg_Object.getCPtr(obj));
    Dwg_Object_LONG_TRANSACTION ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_LONG_TRANSACTION(cPtr, false);
    return ret;
  }

  public static Dwg_Object_OBJECT_PTR dwg_object_to_OBJECT_PTR(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_OBJECT_PTR(Dwg_Object.getCPtr(obj));
    Dwg_Object_OBJECT_PTR ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_OBJECT_PTR(cPtr, false);
    return ret;
  }

  public static Dwg_Object_PERSUBENTMGR dwg_object_to_PERSUBENTMGR(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_PERSUBENTMGR(Dwg_Object.getCPtr(obj));
    Dwg_Object_PERSUBENTMGR ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_PERSUBENTMGR(cPtr, false);
    return ret;
  }

  public static Dwg_Object_SECTION_MANAGER dwg_object_to_SECTION_MANAGER(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_SECTION_MANAGER(Dwg_Object.getCPtr(obj));
    Dwg_Object_SECTION_MANAGER ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_SECTION_MANAGER(cPtr, false);
    return ret;
  }

  public static Dwg_Object_TABLEGEOMETRY dwg_object_to_TABLEGEOMETRY(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_TABLEGEOMETRY(Dwg_Object.getCPtr(obj));
    Dwg_Object_TABLEGEOMETRY ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_TABLEGEOMETRY(cPtr, false);
    return ret;
  }

  public static Dwg_Object_TABLESTYLE dwg_object_to_TABLESTYLE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_TABLESTYLE(Dwg_Object.getCPtr(obj));
    Dwg_Object_TABLESTYLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_TABLESTYLE(cPtr, false);
    return ret;
  }

  public static Dwg_Object_UNDERLAYDEFINITION dwg_object_to_UNDERLAYDEFINITION(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_UNDERLAYDEFINITION(Dwg_Object.getCPtr(obj));
    Dwg_Object_UNDERLAYDEFINITION ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_UNDERLAYDEFINITION(cPtr, false);
    return ret;
  }

  public static Dwg_Object_VISUALSTYLE dwg_object_to_VISUALSTYLE(Dwg_Object obj) {
    global::System.IntPtr cPtr = LibreDWGPINVOKE.dwg_object_to_VISUALSTYLE(Dwg_Object.getCPtr(obj));
    Dwg_Object_VISUALSTYLE ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_VISUALSTYLE(cPtr, false);
    return ret;
  }

  public static readonly int LIBREDWG_VERSION_MAJOR = LibreDWGPINVOKE.LIBREDWG_VERSION_MAJOR_get();
  public static readonly int LIBREDWG_VERSION_MINOR = LibreDWGPINVOKE.LIBREDWG_VERSION_MINOR_get();
  public static readonly int LIBREDWG_VERSION = LibreDWGPINVOKE.LIBREDWG_VERSION_get();
  public static readonly string FORMAT_RC = LibreDWGPINVOKE.FORMAT_RC_get();
  public static readonly string FORMAT_RCd = LibreDWGPINVOKE.FORMAT_RCd_get();
  public static readonly string FORMAT_RCu = LibreDWGPINVOKE.FORMAT_RCu_get();
  public static readonly string FORMAT_RCx = LibreDWGPINVOKE.FORMAT_RCx_get();
  public static readonly string FORMAT_B = LibreDWGPINVOKE.FORMAT_B_get();
  public static readonly string FORMAT_BB = LibreDWGPINVOKE.FORMAT_BB_get();
  public static readonly string FORMAT_3B = LibreDWGPINVOKE.FORMAT_3B_get();
  public static readonly string FORMAT_MC = LibreDWGPINVOKE.FORMAT_MC_get();
  public static readonly string FORMAT_UMC = LibreDWGPINVOKE.FORMAT_UMC_get();
  public static readonly string FORMAT_RD = LibreDWGPINVOKE.FORMAT_RD_get();
  public static readonly string FORMAT_TF = LibreDWGPINVOKE.FORMAT_TF_get();
  public static readonly string FORMAT_TV = LibreDWGPINVOKE.FORMAT_TV_get();
  public static readonly string FORMAT_T16 = LibreDWGPINVOKE.FORMAT_T16_get();
  public static readonly string FORMAT_T32 = LibreDWGPINVOKE.FORMAT_T32_get();
  public static readonly string FORMAT_TU32 = LibreDWGPINVOKE.FORMAT_TU32_get();
  public static readonly string FORMAT_BT = LibreDWGPINVOKE.FORMAT_BT_get();
  public static readonly string FORMAT_DD = LibreDWGPINVOKE.FORMAT_DD_get();
  public static readonly string FORMAT_BD = LibreDWGPINVOKE.FORMAT_BD_get();
  public static readonly string FORMAT_4BITS = LibreDWGPINVOKE.FORMAT_4BITS_get();
  public static readonly string FORMAT_D2T = LibreDWGPINVOKE.FORMAT_D2T_get();
  public static readonly string FORMAT_TU = LibreDWGPINVOKE.FORMAT_TU_get();
  public static readonly string FORMAT_H = LibreDWGPINVOKE.FORMAT_H_get();
  public static readonly string FORMAT_REF = LibreDWGPINVOKE.FORMAT_REF_get();
  public static readonly int DWG_OPTS_LOGLEVEL = LibreDWGPINVOKE.DWG_OPTS_LOGLEVEL_get();
  public static readonly int DWG_OPTS_MINIMAL = LibreDWGPINVOKE.DWG_OPTS_MINIMAL_get();
  public static readonly int DWG_OPTS_DXFB = LibreDWGPINVOKE.DWG_OPTS_DXFB_get();
  public static readonly int DWG_OPTS_JSONFIRST = LibreDWGPINVOKE.DWG_OPTS_JSONFIRST_get();
  public static readonly int DWG_OPTS_INDXF = LibreDWGPINVOKE.DWG_OPTS_INDXF_get();
  public static readonly int DWG_OPTS_INJSON = LibreDWGPINVOKE.DWG_OPTS_INJSON_get();
  public static readonly int DWG_OPTS_IN = LibreDWGPINVOKE.DWG_OPTS_IN_get();
}
