//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_ContentFormat : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_ContentFormat(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_ContentFormat obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_ContentFormat() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_ContentFormat(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public uint property_override_flags {
    set {
      LibreDWGPINVOKE.Dwg_ContentFormat_property_override_flags_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_ContentFormat_property_override_flags_get(swigCPtr);
      return ret;
    } 
  }

  public uint property_flags {
    set {
      LibreDWGPINVOKE.Dwg_ContentFormat_property_flags_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_ContentFormat_property_flags_get(swigCPtr);
      return ret;
    } 
  }

  public uint value_data_type {
    set {
      LibreDWGPINVOKE.Dwg_ContentFormat_value_data_type_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_ContentFormat_value_data_type_get(swigCPtr);
      return ret;
    } 
  }

  public uint value_unit_type {
    set {
      LibreDWGPINVOKE.Dwg_ContentFormat_value_unit_type_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_ContentFormat_value_unit_type_get(swigCPtr);
      return ret;
    } 
  }

  public string value_format_string {
    set {
      LibreDWGPINVOKE.Dwg_ContentFormat_value_format_string_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_ContentFormat_value_format_string_get(swigCPtr);
      return ret;
    } 
  }

  public double rotation {
    set {
      LibreDWGPINVOKE.Dwg_ContentFormat_rotation_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_ContentFormat_rotation_get(swigCPtr);
      return ret;
    } 
  }

  public double block_scale {
    set {
      LibreDWGPINVOKE.Dwg_ContentFormat_block_scale_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_ContentFormat_block_scale_get(swigCPtr);
      return ret;
    } 
  }

  public uint cell_alignment {
    set {
      LibreDWGPINVOKE.Dwg_ContentFormat_cell_alignment_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_ContentFormat_cell_alignment_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color content_color {
    set {
      LibreDWGPINVOKE.Dwg_ContentFormat_content_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_ContentFormat_content_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref text_style {
    set {
      LibreDWGPINVOKE.Dwg_ContentFormat_text_style_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_ContentFormat_text_style_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public double text_height {
    set {
      LibreDWGPINVOKE.Dwg_ContentFormat_text_height_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_ContentFormat_text_height_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_ContentFormat() : this(LibreDWGPINVOKE.new_Dwg_ContentFormat(), true) {
  }

}
