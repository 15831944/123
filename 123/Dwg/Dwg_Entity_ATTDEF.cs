//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_Entity_ATTDEF : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_Entity_ATTDEF(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_Entity_ATTDEF obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_Entity_ATTDEF() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_Entity_ATTDEF(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public Dwg_Object_Entity parent {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_parent_set(swigCPtr, Dwg_Object_Entity.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_parent_get(swigCPtr);
      Dwg_Object_Entity ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Entity(cPtr, false);
      return ret;
    } 
  }

  public double elevation {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_elevation_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_elevation_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_2BD insertion_pt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_insertion_pt_set(swigCPtr, Dwg_Bitcode_2BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_insertion_pt_get(swigCPtr);
      Dwg_Bitcode_2BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_2BD alignment_pt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_alignment_pt_set(swigCPtr, Dwg_Bitcode_2BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_alignment_pt_get(swigCPtr);
      Dwg_Bitcode_2BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_2BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD extrusion {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_extrusion_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_extrusion_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public double thickness {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_thickness_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_thickness_get(swigCPtr);
      return ret;
    } 
  }

  public double oblique_ang {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_oblique_ang_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_oblique_ang_get(swigCPtr);
      return ret;
    } 
  }

  public double rotation {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_rotation_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_rotation_get(swigCPtr);
      return ret;
    } 
  }

  public double height {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_height_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_height_get(swigCPtr);
      return ret;
    } 
  }

  public double width_factor {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_width_factor_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_width_factor_get(swigCPtr);
      return ret;
    } 
  }

  public string default_value {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_default_value_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_default_value_get(swigCPtr);
      return ret;
    } 
  }

  public ushort generation {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_generation_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_generation_get(swigCPtr);
      return ret;
    } 
  }

  public ushort horiz_alignment {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_horiz_alignment_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_horiz_alignment_get(swigCPtr);
      return ret;
    } 
  }

  public ushort vert_alignment {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_vert_alignment_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_vert_alignment_get(swigCPtr);
      return ret;
    } 
  }

  public byte dataflags {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_dataflags_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_dataflags_get(swigCPtr);
      return ret;
    } 
  }

  public byte class_version {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_class_version_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_class_version_get(swigCPtr);
      return ret;
    } 
  }

  public byte type {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_type_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_type_get(swigCPtr);
      return ret;
    } 
  }

  public string tag {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_tag_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_tag_get(swigCPtr);
      return ret;
    } 
  }

  public ushort field_length {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_field_length_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_field_length_get(swigCPtr);
      return ret;
    } 
  }

  public byte flags {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_flags_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_flags_get(swigCPtr);
      return ret;
    } 
  }

  public byte lock_position_flag {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_lock_position_flag_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_lock_position_flag_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref style {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_style_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_style_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref mtext_handles {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_mtext_handles_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_mtext_handles_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public ushort annotative_data_size {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_annotative_data_size_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_annotative_data_size_get(swigCPtr);
      return ret;
    } 
  }

  public byte annotative_data_bytes {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_annotative_data_bytes_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_annotative_data_bytes_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Object_Ref annotative_app {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_annotative_app_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_annotative_app_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public ushort annotative_short {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_annotative_short_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_annotative_short_get(swigCPtr);
      return ret;
    } 
  }

  public byte attdef_class_version {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_attdef_class_version_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_attdef_class_version_get(swigCPtr);
      return ret;
    } 
  }

  public string prompt {
    set {
      LibreDWGPINVOKE.Dwg_Entity_ATTDEF_prompt_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_ATTDEF_prompt_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Entity_ATTDEF() : this(LibreDWGPINVOKE.new_Dwg_Entity_ATTDEF(), true) {
  }

}
