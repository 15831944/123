//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_CellStyle : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_CellStyle(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_CellStyle obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_CellStyle() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_CellStyle(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public uint type {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_type_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_CellStyle_type_get(swigCPtr);
      return ret;
    } 
  }

  public ushort data_flags {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_data_flags_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_CellStyle_data_flags_get(swigCPtr);
      return ret;
    } 
  }

  public uint property_override_flags {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_property_override_flags_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_CellStyle_property_override_flags_get(swigCPtr);
      return ret;
    } 
  }

  public uint merge_flags {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_merge_flags_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_CellStyle_merge_flags_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color background_color {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_background_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_CellStyle_background_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public uint content_layout {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_content_layout_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_CellStyle_content_layout_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_ContentFormat content_format {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_content_format_set(swigCPtr, Dwg_ContentFormat.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_CellStyle_content_format_get(swigCPtr);
      Dwg_ContentFormat ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_ContentFormat(cPtr, false);
      return ret;
    } 
  }

  public ushort margin_override_flags {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_margin_override_flags_set(swigCPtr, value);
    } 
    get {
      ushort ret = LibreDWGPINVOKE.Dwg_CellStyle_margin_override_flags_get(swigCPtr);
      return ret;
    } 
  }

  public double vert_margin {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_vert_margin_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_CellStyle_vert_margin_get(swigCPtr);
      return ret;
    } 
  }

  public double horiz_margin {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_horiz_margin_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_CellStyle_horiz_margin_get(swigCPtr);
      return ret;
    } 
  }

  public double bottom_margin {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_bottom_margin_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_CellStyle_bottom_margin_get(swigCPtr);
      return ret;
    } 
  }

  public double right_margin {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_right_margin_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_CellStyle_right_margin_get(swigCPtr);
      return ret;
    } 
  }

  public double margin_horiz_spacing {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_margin_horiz_spacing_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_CellStyle_margin_horiz_spacing_get(swigCPtr);
      return ret;
    } 
  }

  public double margin_vert_spacing {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_margin_vert_spacing_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_CellStyle_margin_vert_spacing_get(swigCPtr);
      return ret;
    } 
  }

  public uint num_borders {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_num_borders_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_CellStyle_num_borders_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_BorderStyle border {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_border_set(swigCPtr, Dwg_BorderStyle.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_CellStyle_border_get(swigCPtr);
      Dwg_BorderStyle ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_BorderStyle(cPtr, false);
      return ret;
    } 
  }

  public Dwg_TableRow tablerow_parent {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_tablerow_parent_set(swigCPtr, Dwg_TableRow.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_CellStyle_tablerow_parent_get(swigCPtr);
      Dwg_TableRow ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_TableRow(cPtr, false);
      return ret;
    } 
  }

  public Dwg_TableDataColumn tabledatacolumn_parent {
    set {
      LibreDWGPINVOKE.Dwg_CellStyle_tabledatacolumn_parent_set(swigCPtr, Dwg_TableDataColumn.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_CellStyle_tabledatacolumn_parent_get(swigCPtr);
      Dwg_TableDataColumn ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_TableDataColumn(cPtr, false);
      return ret;
    } 
  }

  public Dwg_CellStyle() : this(LibreDWGPINVOKE.new_Dwg_CellStyle(), true) {
  }

}
