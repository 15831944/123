//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Dwg_Entity_SECTIONOBJECT : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Dwg_Entity_SECTIONOBJECT(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Dwg_Entity_SECTIONOBJECT obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Dwg_Entity_SECTIONOBJECT() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibreDWGPINVOKE.delete_Dwg_Entity_SECTIONOBJECT(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public Dwg_Object_Entity parent {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_parent_set(swigCPtr, Dwg_Object_Entity.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_parent_get(swigCPtr);
      Dwg_Object_Entity ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Entity(cPtr, false);
      return ret;
    } 
  }

  public uint state {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_state_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_state_get(swigCPtr);
      return ret;
    } 
  }

  public uint flags {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_flags_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_flags_get(swigCPtr);
      return ret;
    } 
  }

  public string name {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_name_set(swigCPtr, value);
    } 
    get {
      string ret = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_name_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD vert_dir {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_vert_dir_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_vert_dir_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public double top_height {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_top_height_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_top_height_get(swigCPtr);
      return ret;
    } 
  }

  public double bottom_height {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_bottom_height_set(swigCPtr, value);
    } 
    get {
      double ret = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_bottom_height_get(swigCPtr);
      return ret;
    } 
  }

  public byte indicator_alpha {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_indicator_alpha_set(swigCPtr, value);
    } 
    get {
      byte ret = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_indicator_alpha_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Color indicator_color {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_indicator_color_set(swigCPtr, Dwg_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_indicator_color_get(swigCPtr);
      Dwg_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Color(cPtr, false);
      return ret;
    } 
  }

  public uint num_verts {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_num_verts_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_num_verts_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD verts {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_verts_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_verts_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public uint num_blverts {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_num_blverts_set(swigCPtr, value);
    } 
    get {
      uint ret = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_num_blverts_get(swigCPtr);
      return ret;
    } 
  }

  public Dwg_Bitcode_3BD blverts {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_blverts_set(swigCPtr, Dwg_Bitcode_3BD.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_blverts_get(swigCPtr);
      Dwg_Bitcode_3BD ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Bitcode_3BD(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Object_Ref setting {
    set {
      LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_setting_set(swigCPtr, Dwg_Object_Ref.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibreDWGPINVOKE.Dwg_Entity_SECTIONOBJECT_setting_get(swigCPtr);
      Dwg_Object_Ref ret = (cPtr == global::System.IntPtr.Zero) ? null : new Dwg_Object_Ref(cPtr, false);
      return ret;
    } 
  }

  public Dwg_Entity_SECTIONOBJECT() : this(LibreDWGPINVOKE.new_Dwg_Entity_SECTIONOBJECT(), true) {
  }

}
